{"version":3,"sources":["../node_modules/@material-ui/core/esm/Table/Tablelvl2Context.js","../node_modules/@material-ui/core/esm/Table/TableContext.js","../node_modules/@material-ui/core/esm/TableCell/TableCell.js","../node_modules/@material-ui/core/esm/Table/Table.js","../node_modules/@material-ui/core/esm/TableHead/TableHead.js","../node_modules/@material-ui/core/esm/TableRow/TableRow.js","../node_modules/@material-ui/core/esm/TableBody/TableBody.js","app/views/utilities/Spacing.jsx"],"names":["Tablelvl2Context","React","TableContext","TableCell","props","ref","role","Component","_props$align","align","classes","className","component","paddingProp","padding","scopeProp","scope","sizeProp","size","sortDirection","variantProp","variant","other","_objectWithoutProperties","table","tablelvl2","isHeadCell","ariaSort","_extends","clsx","root","concat","capitalize","stickyHeader","withStyles","theme","typography","body2","display","verticalAlign","borderBottom","palette","type","lighten","alpha","divider","darken","textAlign","head","color","text","primary","lineHeight","pxToRem","fontWeight","fontWeightMedium","body","footer","secondary","fontSize","sizeSmall","paddingRight","width","paddingLeft","paddingCheckbox","paddingNone","alignLeft","alignCenter","alignRight","flexDirection","alignJustify","position","top","left","zIndex","backgroundColor","background","default","name","defaultComponent","Table","_props$component","_props$padding","_props$size","_props$stickyHeader","Provider","value","borderCollapse","borderSpacing","spacing","captionSide","TableHead","TableRow","_props$hover","hover","_props$selected","selected","outline","action","main","selectedOpacity","TableBody","Spacing","routeSegments","path","title","Array","keys","map","item","index","slice","description","ind","replace"],"mappings":"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","file":"static/js/22.d5afb6e8.chunk.js","sourcesContent":["import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar Tablelvl2Context = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\n\nexport default Tablelvl2Context;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar TableContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\n\nexport default TableContext;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport { darken, alpha, lighten } from '../styles/colorManipulator';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      display: 'table-cell',\n      verticalAlign: 'inherit',\n      // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n      // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n      borderBottom: \"1px solid\\n    \".concat(theme.palette.type === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68)),\n      textAlign: 'left',\n      padding: 16\n    }),\n\n    /* Styles applied to the root element if `variant=\"head\"` or `context.table.head`. */\n    head: {\n      color: theme.palette.text.primary,\n      lineHeight: theme.typography.pxToRem(24),\n      fontWeight: theme.typography.fontWeightMedium\n    },\n\n    /* Styles applied to the root element if `variant=\"body\"` or `context.table.body`. */\n    body: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `variant=\"footer\"` or `context.table.footer`. */\n    footer: {\n      color: theme.palette.text.secondary,\n      lineHeight: theme.typography.pxToRem(21),\n      fontSize: theme.typography.pxToRem(12)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: '6px 24px 6px 16px',\n      '&:last-child': {\n        paddingRight: 16\n      },\n      '&$paddingCheckbox': {\n        width: 24,\n        // prevent the checkbox column from growing\n        padding: '0 12px 0 16px',\n        '&:last-child': {\n          paddingLeft: 12,\n          paddingRight: 16\n        },\n        '& > *': {\n          padding: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"checkbox\"`. */\n    paddingCheckbox: {\n      width: 48,\n      // prevent the checkbox column from growing\n      padding: '0 0 0 4px',\n      '&:last-child': {\n        paddingLeft: 0,\n        paddingRight: 4\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"none\"`. */\n    paddingNone: {\n      padding: 0,\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right',\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `context.table.stickyHeader={true}`. */\n    stickyHeader: {\n      position: 'sticky',\n      top: 0,\n      left: 0,\n      zIndex: 2,\n      backgroundColor: theme.palette.background.default\n    }\n  };\n};\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\n\nvar TableCell = /*#__PURE__*/React.forwardRef(function TableCell(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      component = props.component,\n      paddingProp = props.padding,\n      scopeProp = props.scope,\n      sizeProp = props.size,\n      sortDirection = props.sortDirection,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"]);\n\n  var table = React.useContext(TableContext);\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  var isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  var role;\n  var Component;\n\n  if (component) {\n    Component = component;\n    role = isHeadCell ? 'columnheader' : 'cell';\n  } else {\n    Component = isHeadCell ? 'th' : 'td';\n  }\n\n  var scope = scopeProp;\n\n  if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n\n  var padding = paddingProp || (table && table.padding ? table.padding : 'normal');\n  var size = sizeProp || (table && table.size ? table.size : 'medium');\n  var variant = variantProp || tablelvl2 && tablelvl2.variant;\n  var ariaSort = null;\n\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], padding !== 'normal' && classes[\"padding\".concat(capitalize(padding))], size !== 'medium' && classes[\"size\".concat(capitalize(size))], variant === 'head' && table && table.stickyHeader && classes.stickyHeader),\n    \"aria-sort\": ariaSort,\n    role: role,\n    scope: scope\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes = {\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The table cell contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Sets the padding applied to the cell.\n   * By default, the Table parent component set the value (`normal`).\n   * `default` is deprecated, use `normal` instead.\n   */\n  padding: chainPropTypes(PropTypes.oneOf(['normal', 'checkbox', 'none', 'default']), function (props) {\n    if (props.padding === 'default') {\n      return new Error('Material-UI: padding=\"default\" was renamed to padding=\"normal\" for consistency.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n\n  /**\n   * Specify the size of the cell.\n   * By default, the Table parent component set the value (`medium`).\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n\n  /**\n   * Specify the cell type.\n   * By default, the TableHead, TableBody or TableFooter parent component set the value.\n   */\n  variant: PropTypes.oneOf(['body', 'footer', 'head'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableCell'\n})(TableCell);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport TableContext from './TableContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'table',\n      width: '100%',\n      borderCollapse: 'collapse',\n      borderSpacing: 0,\n      '& caption': _extends({}, theme.typography.body2, {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n        textAlign: 'left',\n        captionSide: 'bottom'\n      })\n    },\n\n    /* Styles applied to the root element if `stickyHeader={true}`. */\n    stickyHeader: {\n      borderCollapse: 'separate'\n    }\n  };\n};\nvar defaultComponent = 'table';\nvar Table = /*#__PURE__*/React.forwardRef(function Table(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      _props$padding = props.padding,\n      padding = _props$padding === void 0 ? 'normal' : _props$padding,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$stickyHeader = props.stickyHeader,\n      stickyHeader = _props$stickyHeader === void 0 ? false : _props$stickyHeader,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"]);\n\n  var table = React.useMemo(function () {\n    return {\n      padding: padding,\n      size: size,\n      stickyHeader: stickyHeader\n    };\n  }, [padding, size, stickyHeader]);\n  return /*#__PURE__*/React.createElement(TableContext.Provider, {\n    value: table\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    role: Component === defaultComponent ? null : 'table',\n    ref: ref,\n    className: clsx(classes.root, className, stickyHeader && classes.stickyHeader)\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes = {\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   * `default` is deprecated, use `normal` instead.\n   */\n  padding: chainPropTypes(PropTypes.oneOf(['normal', 'checkbox', 'none', 'default']), function (props) {\n    if (props.padding === 'default') {\n      return new Error('Material-UI: padding=\"default\" was renamed to padding=\"normal\" for consistency.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Allows TableCells to inherit size of the Table.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE 11.\n   */\n  stickyHeader: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTable'\n})(Table);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-header-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'head'\n};\nvar defaultComponent = 'thead';\nvar TableHead = /*#__PURE__*/React.forwardRef(function TableHead(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableHead'\n})(TableHead);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport { alpha } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: 'inherit',\n      display: 'table-row',\n      verticalAlign: 'middle',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      '&$hover:hover': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.selectedOpacity)\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Pseudo-class applied to the root element if `hover={true}`. */\n    hover: {},\n\n    /* Styles applied to the root element if table variant=\"head\". */\n    head: {},\n\n    /* Styles applied to the root element if table variant=\"footer\". */\n    footer: {}\n  };\n};\nvar defaultComponent = 'tr';\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\n\nvar TableRow = /*#__PURE__*/React.forwardRef(function TableRow(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      _props$hover = props.hover,\n      hover = _props$hover === void 0 ? false : _props$hover,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"hover\", \"selected\"]);\n\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className, tablelvl2 && {\n      'head': classes.head,\n      'footer': classes.footer\n    }[tablelvl2.variant], hover && classes.hover, selected && classes.selected),\n    role: Component === defaultComponent ? null : 'row'\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes = {\n  /**\n   * Should be valid <tr> children such as `TableCell`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the table row will shade on hover.\n   */\n  hover: PropTypes.bool,\n\n  /**\n   * If `true`, the table row will have the selected shading.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableRow'\n})(TableRow);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-row-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'body'\n};\nvar defaultComponent = 'tbody';\nvar TableBody = /*#__PURE__*/React.forwardRef(function TableBody(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableBody'\n})(TableBody);","import React from 'react'\r\nimport {\r\n    Table,\r\n    TableHead,\r\n    TableCell,\r\n    TableBody,\r\n    TableRow,\r\n} from '@material-ui/core'\r\nimport { Breadcrumb, SimpleCard } from 'app/components'\r\nimport Highlight from 'react-highlight'\r\n\r\nconst Spacing = () => {\r\n    let list = [\r\n        {\r\n            className: '.m-0',\r\n            description: `margin 0px`,\r\n        },\r\n        {\r\n            className: '.mx-4',\r\n            description: `margin right 1rem & margin left 1rem`,\r\n        },\r\n        {\r\n            className: '.p-0',\r\n            description: `padding 0px`,\r\n        },\r\n        {\r\n            className: '.py-2',\r\n            description: `padding top 0.5rem & padding bottom 0.5rem`,\r\n        },\r\n        {\r\n            className: '.py-2px',\r\n            description: `padding top 2px & padding bottom 2px`,\r\n        },\r\n        {\r\n            className: '.m-auto',\r\n            description: `margin: auto`,\r\n        },\r\n        {\r\n            className: '.mx-auto',\r\n            description: `margin-right: auto; margin-left: auto`,\r\n        },\r\n        {\r\n            className: '.m-sm-30',\r\n            description: `\r\n      screen size below 768px:: margin is 16px \r\n      screen size over 768px:: margin is 30px\r\n      `,\r\n        },\r\n        {\r\n            className: '.mb-sm-30',\r\n            description: `\r\n      screen size below 768px:: margin-bottom is 16px \r\n      screen size over 768px:: margin-bottom is 30px\r\n      `,\r\n        },\r\n        {\r\n            className: '.px-sm-30',\r\n            description: `\r\n      screen size below 768px:: padding right and left is 16px \r\n      screen size over 768px:: padding right and left is 30px\r\n      `,\r\n        },\r\n        {\r\n            className: '.p-sm-30',\r\n            description: `\r\n      screen size below 768px:: padding is 16px \r\n      screen size over 768px:: padding is 24px\r\n      `,\r\n        },\r\n        {\r\n            className: '.px-sm-24',\r\n            description: `\r\n      screen size below 768px:: padding right and left is 16px\r\n      screen size over 768px:: padding right and left is 24px\r\n       `,\r\n        },\r\n        {\r\n            className: '.pt-sm-24',\r\n            description: `\r\n      screen size below 768px:: padding top is 16px\r\n      screen size over 768px:: padding top is 24px\r\n       `,\r\n        },\r\n        {\r\n            className: '.pl-sm-24',\r\n            description: `\r\n      screen size below 768px:: padding left is 16px\r\n      screen size over 768px:: padding left is 24px\r\n       `,\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <div className=\"m-sm-30\">\r\n            <div className=\"mb-sm-30\">\r\n                <Breadcrumb\r\n                    routeSegments={[\r\n                        { name: 'Utilities', path: '/utilities' },\r\n                        { name: 'Spacing' },\r\n                    ]}\r\n                />\r\n            </div>\r\n            <SimpleCard title=\"Spacing\">\r\n                <p className=\"m-0\">\r\n                    The classes are named using the format-\r\n                    <code>(property)(sides)-(size)</code>\r\n                </p>\r\n                <p>\r\n                    Where <em>property</em> is one of:\r\n                </p>\r\n                <ul>\r\n                    <li>\r\n                        <code>m</code> - for classes that set{' '}\r\n                        <code>margin</code>\r\n                    </li>\r\n                    <li>\r\n                        <code>p</code> - for classes that set{' '}\r\n                        <code>padding</code>\r\n                    </li>\r\n                </ul>\r\n                <p>\r\n                    Where <em>sides</em> is one of:\r\n                </p>\r\n                <ul>\r\n                    <li>\r\n                        <code>t</code> - for classes that set{' '}\r\n                        <code>margin-top</code> or <code>padding-top</code>\r\n                    </li>\r\n                    <li>\r\n                        <code>b</code> - for classes that set{' '}\r\n                        <code>margin-bottom</code> or{' '}\r\n                        <code>padding-bottom</code>\r\n                    </li>\r\n                    <li>\r\n                        <code>l</code> - for classes that set{' '}\r\n                        <code>margin-left</code> or <code>padding-left</code>\r\n                    </li>\r\n                    <li>\r\n                        <code>r</code> - for classes that set{' '}\r\n                        <code>margin-right</code> or <code>padding-right</code>\r\n                    </li>\r\n                    <li>\r\n                        <code>x</code> - for classes that set both{' '}\r\n                        <code>*-left</code> and <code>*-right</code>\r\n                    </li>\r\n                    <li>\r\n                        <code>y</code> - for classes that set both{' '}\r\n                        <code>*-top</code> and <code>*-bottom</code>\r\n                    </li>\r\n                    <li>\r\n                        blank - for classes that set a <code>margin</code> or{' '}\r\n                        <code>padding</code> on all 4 sides of the element\r\n                    </li>\r\n                </ul>\r\n\r\n                <Table className=\"whitespace-pre\">\r\n                    <TableHead>\r\n                        <TableRow className=\"bg-default\">\r\n                            <TableCell className=\"px-0\">Name</TableCell>\r\n                            <TableCell className=\"px-0\">Size</TableCell>\r\n                            <TableCell className=\"px-0\">Pixels</TableCell>\r\n                            <TableCell className=\"px-0\">Space</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {[...Array(26).keys()].map((item, index) => (\r\n                            <TableRow key={index}>\r\n                                <TableCell\r\n                                    className=\"px-0 capitalize\"\r\n                                    align=\"left\"\r\n                                >\r\n                                    {item}\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    className=\"px-0 capitalize\"\r\n                                    align=\"left\"\r\n                                >\r\n                                    {item * 0.25}rem\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    className=\"px-0 capitalize\"\r\n                                    align=\"left\"\r\n                                >\r\n                                    {item * 0.25 * 16}px\r\n                                </TableCell>\r\n                                <TableCell className=\"px-0 capitalize\">\r\n                                    <span\r\n                                        className={`py-2 bg-light-gray pr-${item}`}\r\n                                    ></span>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                        {[...Array(17).keys()].slice(1).map((item, index) => (\r\n                            <TableRow key={index}>\r\n                                <TableCell\r\n                                    className=\"px-0 capitalize\"\r\n                                    align=\"left\"\r\n                                >\r\n                                    {item}px\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    className=\"px-0 capitalize\"\r\n                                    align=\"left\"\r\n                                >\r\n                                    {item / 16}rem\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    className=\"px-0 capitalize\"\r\n                                    align=\"left\"\r\n                                >\r\n                                    {item}px\r\n                                </TableCell>\r\n                                <TableCell className=\"px-0 capitalize\">\r\n                                    <span\r\n                                        className={`py-2 bg-light-gray pr-${item}px`}\r\n                                    ></span>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n\r\n                <h6 className=\"mb-4 py-6\">Example</h6>\r\n                {list.map((item, ind) => (\r\n                    <div\r\n                        key={ind}\r\n                        className=\"flex items-center justify-between px-4\"\r\n                    >\r\n                        <code className=\"min-w-88\">{item.className}</code>\r\n                        <div className=\"highlight-js\">\r\n                            <Highlight className=\"html\">{`<div className=\"${item.className.replace(\r\n                                '.',\r\n                                ''\r\n                            )}\">${item.description}</div>`}</Highlight>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </SimpleCard>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spacing\r\n"],"sourceRoot":""}
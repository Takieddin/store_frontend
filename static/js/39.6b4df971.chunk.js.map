{"version":3,"sources":["app/views/dashboard/shared/StatCard3.jsx","app/views/dashboard/shared/ComparisonChart2.jsx","app/views/dashboard/shared/GuageProgressCard.jsx","app/views/dashboard/shared/ModifiedAreaChart.jsx","app/views/dashboard/shared/FollowerCard.jsx","app/views/dashboard/shared/FollowerCard2.jsx","app/views/dashboard/CustomizedSnackbar.jsx","app/views/dashboard/SimpleForm.jsx","app/views/dashboard/Analytics2.jsx"],"names":["connect","state","cash","expdip","coffre","profit","monthprofit","monthsaleprofit","credit","profits","sale_profits","sale_profit","console","log","length","monthly","statList","icon","amount","title","color","month","substring","Grid","container","spacing","map","item","ind","md","sm","xs","Card","elevation","className","IconButton","size","toLocaleString","ComparisonChart2","height","palette","useTheme","option","grid","left","bottom","right","legend","itemGap","textStyle","text","secondary","fontSize","fontFamily","primary","dark","light","error","barMaxWidth","tooltip","dataset","source","xAxis","type","axisLine","show","splitLine","axisTick","axisLabel","yAxis","lineStyle","opacity","series","itemStyle","barBorderRadius","style","useStyles","makeStyles","position","top","GaugeProgressCard","classes","theme","options","chart","padding","plotOptions","radialBar","startAngle","endAngle","offsetY","hollow","margin","dataLabels","showOn","name","value","fontWeight","formatter","val","opt","track","background","strokeWidth","colors","main","stroke","lineCap","responsive","breakpoint","offsetX","clsx","defaultOption","trigger","axisPointer","crossStyle","areaStyle","smooth","width","showGrid","boundaryGap","min","max","x","y","x2","y2","colorStops","offset","global","ModifiedAreaChart","merge","FollowerCard","data","FollowerCard2","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","useStyles1","backgroundColor","green","amber","iconVariant","marginRight","message","display","alignItems","MySnackbarContentWrapper","props","onClose","variant","other","Icon","SnackbarContent","id","action","onClick","loading","suc","hasErrors","dispatch","handleClose","event","reason","CLOSE_SNACKBAR","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","clients","useState","details","date","setState","handleChange","persist","target","CustomizedSnackbar","onSubmit","tmp","addExp","addDip","onError","lg","FormControl","component","FormLabel","RadioGroup","onChange","FormControlLabel","control","Radio","label","Autocomplete","newValue","renderInput","params","TextField","placeholder","validators","errorMessages","Button","FormGroup","Switch","checked","defaultChecked","useEffect","fetchData","defaultValue","select","MenuItem"],"mappings":"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","file":"static/js/39.6b4df971.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Grid, Card, IconButton, Icon } from '@material-ui/core'\r\nimport { connect } from 'react-redux'\r\n\r\nconst StatCard3 = ({cash,coffre,profit,monthprofit,monthsaleprofit,credit,profits,sale_profits,sale_profit}) => {\r\n    /*\r\n.\r\n.\r\n.bg-error\r\n.bg-dark\r\n.\r\n.bg-light-greensubstring(1, 4)\r\n.bg-light-error\r\n.bg-light-primary*/\r\nconsole.log(\"monthprofit\")\r\nconst l=monthprofit\r\nconsole.log(monthprofit[monthprofit.length-1]?.monthly)\r\nconsole.log(\"cashc\")\r\n    const statList = [\r\n        {\r\n            icon: 'euro_symbol',\r\n            amount: (cash||0 )+\",00 DA\",\r\n            title: 'Current Cash',\r\n            color :'bg-green'\r\n        },\r\n        {\r\n            icon: 'euro_symbol',\r\n            amount:  (coffre||0 )+\",00 DA\",\r\n            title: 'Coffre',\r\n            color :'bg-secondary'\r\n            \r\n        },\r\n        {\r\n            icon: 'euro_symbol',\r\n            amount:  (cash-coffre||0 )+\",00 DA\",\r\n            title: 'Caissse',\r\n            color :'bg-light-dark'\r\n\r\n        },\r\n    \r\n        {\r\n            icon: 'euro_symbol',\r\n            amount:  (profit||0 )+\",00 DA\",\r\n            title: 'Total Net Profit',\r\n            color :'bg-green'\r\n\r\n        },\r\n        {\r\n            icon: 'euro_symbol',\r\n            amount:   (sale_profit||0 )+\",00 DA\",\r\n            title: 'Total Sales Profit',\r\n            color :'bg-primary'\r\n\r\n        },\r\n        {\r\n            icon: 'euro_symbol',\r\n            amount:   (credit||0 )+\",00 DA\",\r\n            title: 'Total Credits',\r\n            color :'bg-error'\r\n\r\n        },\r\n        {\r\n            icon: 'euro_symbol',\r\n            amount:  (monthprofit[monthprofit.length-1]?.monthly||0 )+\",00 DA\",\r\n            title: 'sales profit of :  '+monthprofit[monthprofit.length-1]?.month?.substring(0,7),\r\n            color :'bg-secondary'\r\n\r\n        },\r\n        {\r\n            icon: 'euro_symbol',\r\n            amount:(monthsaleprofit[monthsaleprofit.length-1]?.monthly||0 )+\",00 DA\",\r\n            title:  'net  profit of :  '+monthsaleprofit[monthsaleprofit.length-1]?.month?.substring(0,7),\r\n            color :'bg-primary'\r\n\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={3}>\r\n                {statList.map((item, ind) => (\r\n                    <Grid key={item.title} item md={3} sm={6} xs={12}>\r\n                        <Card elevation={3} className={\"p-5 flex text-white \"+`${item.color}`}>\r\n                            <div>\r\n                                <IconButton\r\n                                    size=\"small\"\r\n                                    className=\"p-2 bg-light-gray\"\r\n                                >\r\n                                    <Icon className=\"text-white\">\r\n                                        {item.icon}\r\n                                    </Icon>\r\n                                </IconButton>\r\n                            </div>\r\n                            <div className=\"ml-4\">\r\n                                <h3 className=\"mt-1 text-32\">\r\n                                    {item.amount.toLocaleString()}\r\n                                </h3>\r\n                                <p className=\"m-5 text-white\">{item.title}</p>\r\n                            </div>\r\n                        </Card>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    cash: state.expdip.cash,\r\n    coffre: state.expdip.coffre,\r\n    profit: state.expdip.profit,\r\n    monthprofit: state.expdip.monthprofit,\r\n    monthsaleprofit: state.expdip.monthsaleprofit,\r\n    credit: state.expdip.credit,\r\n    profits: state.expdip.profits,\r\n    sale_profits: state.expdip.sale_profits,\r\n    sale_profit: state.expdip.sale_profit,\r\n    \r\n})\r\nexport default connect(mapStateToProps)(StatCard3)","import React from 'react'\r\nimport ReactEcharts from 'echarts-for-react'\r\nimport { useTheme } from '@material-ui/core/styles'\r\n\r\nconst ComparisonChart2 = ({ height }) => {\r\n    const { palette } = useTheme()\r\n\r\n    const option = {\r\n        grid: {\r\n            left: '6%',\r\n            bottom: '10%',\r\n            right: '1%',\r\n        },\r\n        legend: {\r\n            itemGap: 20,\r\n            icon: 'circle',\r\n            textStyle: {\r\n                color: palette.text.secondary,\r\n                fontSize: 13,\r\n                fontFamily: 'roboto',\r\n            },\r\n        },\r\n        color: [\r\n            palette.primary.dark,\r\n            palette.primary.light,\r\n            palette.secondary.light,\r\n            palette.error.light,\r\n        ],\r\n        barMaxWidth: '10px',\r\n        tooltip: {},\r\n        dataset: {\r\n            source: [\r\n                ['Month', 'Website', 'App', 'Linux', 'Windows'],\r\n                ['Jan', 2200, 1200, 950, 800],\r\n                ['Feb', 800, 500, 1500, 600],\r\n                ['Mar', 700, 1350, 800, 700],\r\n                ['Apr', 1500, 1250, 950, 900],\r\n                ['May', 2450, 450, 950, 500],\r\n                ['June', 1700, 1250, 1500, 800],\r\n            ],\r\n        },\r\n        xAxis: {\r\n            type: 'category',\r\n            axisLine: {\r\n                show: false,\r\n            },\r\n            splitLine: {\r\n                show: false,\r\n            },\r\n            axisTick: {\r\n                show: false,\r\n            },\r\n            axisLabel: {\r\n                color: palette.text.secondary,\r\n                fontSize: 13,\r\n                fontFamily: 'roboto',\r\n            },\r\n        },\r\n        yAxis: {\r\n            axisLine: {\r\n                show: false,\r\n            },\r\n            axisTick: {\r\n                show: false,\r\n            },\r\n            splitLine: {\r\n                // show: false\r\n                lineStyle: {\r\n                    color: palette.text.secondary,\r\n                    opacity: 0.15,\r\n                },\r\n            },\r\n            axisLabel: {\r\n                color: palette.text.secondary,\r\n                fontSize: 13,\r\n                fontFamily: 'roboto',\r\n            },\r\n        },\r\n        // Declare several bar series, each will be mapped\r\n        // to a column of dataset.source by default.\r\n        series: [\r\n            {\r\n                type: 'bar',\r\n                itemStyle: {\r\n                    barBorderRadius: [10, 10, 0, 0],\r\n                },\r\n            },\r\n            {\r\n                type: 'bar',\r\n                itemStyle: {\r\n                    barBorderRadius: [10, 10, 0, 0],\r\n                },\r\n            },\r\n            {\r\n                type: 'bar',\r\n                itemStyle: {\r\n                    barBorderRadius: [10, 10, 0, 0],\r\n                },\r\n            },\r\n            {\r\n                type: 'bar',\r\n                itemStyle: {\r\n                    barBorderRadius: [10, 10, 0, 0],\r\n                },\r\n            },\r\n        ],\r\n    }\r\n\r\n    return <ReactEcharts style={{ height: height }} option={option} />\r\n}\r\n\r\nexport default ComparisonChart2\r\n","import React from 'react'\r\nimport { Card, IconButton, Icon } from '@material-ui/core'\r\nimport Chart from 'react-apexcharts'\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\r\nimport clsx from 'clsx'\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n    icon: {\r\n        position: 'absolute',\r\n        top: 'calc(50% - 24px)',\r\n        left: 'calc(50% - 18px)',\r\n    },\r\n}))\r\n\r\nconst GaugeProgressCard = () => {\r\n    const classes = useStyles()\r\n    const theme = useTheme()\r\n    const options = {\r\n        chart: {\r\n            // offsetX: 60,\r\n            // offsetY: -20,\r\n        },\r\n        grid: {\r\n            padding: {\r\n                left: 0,\r\n                right: 0,\r\n            },\r\n        },\r\n        plotOptions: {\r\n            radialBar: {\r\n                startAngle: -120,\r\n                endAngle: 120,\r\n                offsetY: 0,\r\n                hollow: {\r\n                    margin: 0,\r\n                    size: '68%',\r\n                },\r\n                dataLabels: {\r\n                    showOn: 'always',\r\n                    name: {\r\n                        show: false,\r\n                    },\r\n                    value: {\r\n                        color: theme.palette.text.primary,\r\n                        fontSize: '24px',\r\n                        fontWeight: '600',\r\n                        // offsetY: -40,\r\n                        offsetY: 38,\r\n                        show: true,\r\n                        formatter: (val, opt) => {\r\n                            return val * 10 + 'K'\r\n                        },\r\n                    },\r\n                },\r\n                track: {\r\n                    background: '#eee',\r\n                    strokeWidth: '100%',\r\n                },\r\n            },\r\n        },\r\n        colors: [theme.palette.primary.main, '#eee'],\r\n        stroke: {\r\n            lineCap: 'round',\r\n        },\r\n        responsive: [\r\n            {\r\n                breakpoint: 767,\r\n                options: {\r\n                    chart: {\r\n                        offsetX: 0,\r\n                        offsetY: 0,\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    }\r\n\r\n    return (\r\n        <Card elevation={3} className=\"h-full\">\r\n            <div className=\" px-4 py-3 mb-6 flex justify-between items-center bg-light-gray\">\r\n                <span className=\"font-medium text-muted\">STATISTICS</span>\r\n                <IconButton size=\"small\">\r\n                    <Icon>more_horiz</Icon>\r\n                </IconButton>\r\n            </div>\r\n            <div className=\"relative\">\r\n                <Chart\r\n                    options={options}\r\n                    series={[84.2]}\r\n                    type=\"radialBar\"\r\n                    height={200}\r\n                />\r\n                <Icon className={clsx('text-muted text-36', classes.icon)}>\r\n                    people\r\n                </Icon>\r\n            </div>\r\n            <h5 className=\"text-center font-medium mb-2\">Awesome</h5>\r\n            <p className=\"m-0 text-muted text-center\">\r\n                Close to reach 1000k folowers!\r\n            </p>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default GaugeProgressCard\r\n","import React from 'react'\r\nimport ReactEcharts from 'echarts-for-react'\r\nimport { merge } from 'lodash'\r\n\r\nconst defaultOption = {\r\n    grid: {\r\n        top: 16,\r\n        left: 36,\r\n        right: 16,\r\n        bottom: 32,\r\n    },\r\n    legend: {},\r\n    tooltip: {\r\n        show: true,\r\n        trigger: 'axis',\r\n\r\n        axisPointer: {\r\n            type: 'cross',\r\n            lineStyle: {\r\n                opacity: 0,\r\n            },\r\n        },\r\n        crossStyle: {\r\n            color: '#000',\r\n        },\r\n    },\r\n    series: [\r\n        {\r\n            areaStyle: {},\r\n            smooth: true,\r\n            lineStyle: {\r\n                width: 2,\r\n                color: '#fff',\r\n            },\r\n        },\r\n    ],\r\n    xAxis: {\r\n        show: true,\r\n        type: 'category',\r\n        showGrid: false,\r\n        boundaryGap: false,\r\n        axisLabel: {\r\n            color: '#ccc',\r\n            margin: 20,\r\n        },\r\n        axisLine: {\r\n            show: false,\r\n        },\r\n        axisTick: {\r\n            show: false,\r\n        },\r\n    },\r\n    yAxis: {\r\n        type: 'value',\r\n        min: 10,\r\n        max: 60,\r\n        axisLabel: {\r\n            color: '#ccc',\r\n            margin: 20,\r\n            fontSize: 13,\r\n            fontFamily: 'roboto',\r\n        },\r\n        splitLine: {\r\n            show: true,\r\n            lineStyle: {\r\n                color: 'rgba(255, 255, 255, .1)',\r\n            },\r\n        },\r\n\r\n        axisLine: {\r\n            show: false,\r\n        },\r\n        axisTick: {\r\n            show: false,\r\n        },\r\n    },\r\n    color: [\r\n        {\r\n            type: 'linear',\r\n            x: 0,\r\n            y: 0,\r\n            x2: 0,\r\n            y2: 1,\r\n            colorStops: [\r\n                {\r\n                    offset: 0,\r\n                    color: 'rgba(255,255,255,0.3)', // color at 0% position\r\n                },\r\n                {\r\n                    offset: 1,\r\n                    color: 'rgba(255,255,255,0)', // color at 100% position\r\n                },\r\n            ],\r\n            global: false, // false by default\r\n        },\r\n    ],\r\n}\r\n\r\nconst ModifiedAreaChart = ({ height, option }) => {\r\n    return (\r\n        <ReactEcharts\r\n            style={{ height: height }}\r\n            option={merge({}, defaultOption, option)}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ModifiedAreaChart\r\n","import React from 'react'\r\nimport ModifiedAreaChart from './ModifiedAreaChart'\r\nimport { Card, Icon } from '@material-ui/core'\r\nimport { useTheme } from '@material-ui/core/styles'\r\n\r\nconst FollowerCard = () => {\r\n    const { palette } = useTheme()\r\n\r\n    return (\r\n        <Card className=\"p-4 mb-6\" elevation={3}>\r\n            <div className=\"flex justify-between items-center\">\r\n                <h4 className=\"m-0\">Followers</h4>\r\n                <div className=\"flex items-center\">\r\n                    <h4 className=\"m-0\">860K</h4>\r\n                    <div className=\"text-center ml-2\">\r\n                        <Icon\r\n                            className=\"block mt--2\"\r\n                            size=\"small\"\r\n                            color=\"primary\"\r\n                        >\r\n                            arrow_drop_up\r\n                        </Icon>\r\n                        <div className=\"text-11 text-muted mt--2\">+49%</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <small className=\"text-muted\">System project</small>\r\n            <ModifiedAreaChart\r\n                height=\"100%\"\r\n                option={{\r\n                    grid: {\r\n                        top: 0,\r\n                        left: 10,\r\n                        right: 10,\r\n                    },\r\n                    tooltip: {\r\n                        axisPointer: {\r\n                            type: 'line',\r\n                        },\r\n                    },\r\n                    series: [\r\n                        {\r\n                            data: [8, 32, 18, 27, 39, 53, 36],\r\n                            type: 'line',\r\n                            areaStyle: null,\r\n                            smooth: false,\r\n                            lineStyle: {\r\n                                width: 2,\r\n                                color: palette.error.main,\r\n                            },\r\n                        },\r\n                    ],\r\n                    xAxis: {\r\n                        data: ['Sat', 'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri'],\r\n                    },\r\n                    yAxis: {\r\n                        show: false,\r\n                    },\r\n                    color: [\r\n                        {\r\n                            type: 'linear',\r\n                            // x: 0,\r\n                            // y: 0,\r\n                            // x2: 0,\r\n                            // y2: 1,\r\n                            colorStops: [\r\n                                {\r\n                                    offset: 0,\r\n                                    color: palette.primary.main, // color at 0% position\r\n                                },\r\n                                {\r\n                                    offset: 1,\r\n                                    color: palette.primary.light, // color at 100% position\r\n                                },\r\n                            ],\r\n                            global: false, // false by default\r\n                        },\r\n                    ],\r\n                }}\r\n            />\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default FollowerCard\r\n","import React from 'react'\r\nimport ModifiedAreaChart from './ModifiedAreaChart'\r\nimport { Card, Icon } from '@material-ui/core'\r\nimport { useTheme } from '@material-ui/core/styles'\r\n\r\nconst FollowerCard2 = () => {\r\n    const { palette } = useTheme()\r\n\r\n    return (\r\n        <Card className=\"p-4\" elevation={6}>\r\n            <div className=\"flex justify-between items-center\">\r\n                <h4 className=\"m-0\">One Else Graph</h4>\r\n                <div className=\"flex items-center\">\r\n                    <h4 className=\"m-0\">429K</h4>\r\n                    <div className=\"text-center ml-2\">\r\n                        <Icon\r\n                            className=\"block mt--2\"\r\n                            size=\"small\"\r\n                            color=\"primary\"\r\n                        >\r\n                            arrow_drop_up\r\n                        </Icon>\r\n                        <div className=\"text-11 text-muted mt--2\">+35%</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <small className=\"text-muted\">System project</small>\r\n            <ModifiedAreaChart\r\n                height=\"300%\"\r\n                option={{\r\n                    grid: {\r\n                        top: 0,\r\n                        left: 10,\r\n                        right: 10,\r\n                        bottom: 32,\r\n                    },\r\n                    tooltip: {\r\n                        axisPointer: {\r\n                            type: 'line',\r\n                        },\r\n                    },\r\n                    series: [\r\n                        {\r\n                            data: [34, 45, 31, 45, 31, 90, 26],\r\n                            type: 'line',\r\n                        },\r\n                    ],\r\n                    xAxis: {\r\n                        data: ['Sat', 'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri'],\r\n                    },\r\n                    yAxis: {\r\n                        show: true,\r\n                    },\r\n                    color: [\r\n                        {\r\n                            type: 'linear',\r\n                            colorStops: [\r\n                                {\r\n                                    offset: 0,\r\n                                    color: palette.primary.main, // color at 0% position\r\n                                },\r\n                                {\r\n                                    offset: 1,\r\n                                    color: palette.primary.light, // color at 100% position\r\n                                },\r\n                            ],\r\n                        },\r\n                    ],\r\n                }}\r\n            />\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default FollowerCard2\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport clsx from 'clsx'\r\nimport Button from '@material-ui/core/Button'\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\r\nimport ErrorIcon from '@material-ui/icons/Error'\r\nimport InfoIcon from '@material-ui/icons/Info'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport { amber, green } from '@material-ui/core/colors'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent'\r\nimport WarningIcon from '@material-ui/icons/Warning'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { connect } from 'react-redux'\r\nimport { CLOSE_SNACKBAR } from 'app/redux/actions/ClientActions'\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n}\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n}))\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles1()\r\n    const { className, message, onClose, variant, ...other } = props\r\n    const Icon = variantIcon[variant]\r\n\r\n    return (\r\n        <SnackbarContent\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n                    <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n                    {message}\r\n                </span>\r\n            }\r\n            action={[\r\n                <IconButton\r\n                    key=\"close\"\r\n                    aria-label=\"Close\"\r\n                    color=\"inherit\"\r\n                    onClick={onClose}\r\n                >\r\n                    <CloseIcon className={classes.icon} />\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    )\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info'])\r\n        .isRequired,\r\n}\r\n\r\n\r\nconst CustomizedSnackbars=({dispatch, loading,suc,  hasErrors,}) =>{\r\n    function handleClose(event, reason) {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n\r\n        dispatch({type:CLOSE_SNACKBAR})\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={(suc||hasErrors)}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n            >\r\n                <MySnackbarContentWrapper\r\n                    onClose={handleClose}\r\n                    variant={hasErrors?'error':'success'}\r\n                    message={hasErrors?'Exapnce/Diposite was not added':'Exapnce/Diposite was  added'}\r\n                />\r\n            </Snackbar>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    loading: state.expdip.loading,\r\n    suc: state.expdip.suc,\r\n    hasErrors: state.expdip.hasErrors,\r\n  })\r\nexport default connect(mapStateToProps)(CustomizedSnackbars)\r\n\r\n","import React, { useState  } from 'react'\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator'\r\nimport { Button, Icon, Grid, Radio, RadioGroup, FormControlLabel, FormControl, FormLabel, Switch, FormGroup, TextField } from '@material-ui/core'\r\nimport 'date-fns'\r\nimport { connect } from 'react-redux'\r\nimport CustomizedSnackbars from './CustomizedSnackbar'\r\nimport { addDip, addExp } from 'app/redux/actions/ExpansesDipositesActions'\r\nimport { Autocomplete } from '@material-ui/lab'\r\n\r\nconst SimpleForm = ({ dispatch, loading, clients, hasErrors }) => {\r\n    const [state, setState] = useState({\r\n        name: '',\r\n        details: '',\r\n        amount: '',\r\n        date: '',\r\n        type: 'E',\r\n        cash:true,\r\n        profit:true\r\n    })\r\n\r\n    const handleSubmit = (event) => {\r\n        const tmp={...state}\r\n        type==\"E\"?\r\n        dispatch( addExp(tmp)):dispatch( addDip(tmp))\r\n        setState({\r\n            name: '',\r\n            details: '',\r\n            amount: '',\r\n            date: '',\r\n            type: 'E',\r\n            cash:true,\r\n            profit:true\r\n        })\r\n\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        event.persist()\r\n        setState({\r\n            ...state,\r\n            [event.target.name]: event.target.value,\r\n        })\r\n    }\r\n    const handlecash = (event) => {\r\n        event.persist()\r\n        setState({\r\n            ...state,\r\n            cash: !cash,\r\n        })\r\n    }\r\n    const handleprofit = (event) => {\r\n        event.persist()\r\n        setState({\r\n            ...state,\r\n            profit: !profit,\r\n        })\r\n    }\r\n\r\n    const { name, details, amount, date, type ,cash,profit} = state\r\n\r\n    return (\r\n        <div>\r\n            <CustomizedSnackbars />\r\n            <ValidatorForm onSubmit={handleSubmit} onError={() => null}>\r\n                <Grid container spacing={6}>\r\n                    <Grid item lg={10} md={10} sm={12} xs={12}>\r\n                        <FormControl component=\"fieldset\">\r\n                            <FormLabel component=\"legend\">Diposite(+) or Expances(-)</FormLabel>\r\n                            <RadioGroup\r\n                                aria-label=\"type\"\r\n                                name=\"type\"\r\n                                value={type}\r\n                                onChange={handleChange}\r\n                            >\r\n                                <FormControlLabel\r\n                                    value=\"E\"\r\n                                    control={<Radio />}\r\n                                    label=\"Expance -\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    value=\"D\"\r\n                                    control={<Radio />}\r\n                                    label=\"Diposite +\"\r\n                                />\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item lg={5} md={6} sm={12} xs={12}>\r\n                        {type==\"E\"?<Autocomplete\r\n                                    id=\"tags-standard\"\r\n                                    value={name || ''}\r\n\r\n                                    onChange={(event, newValue) => {\r\n                                        setState({...state,name:newValue})\r\n                                    }}\r\n                                    options={['khadam payment','masrouf soug','masrouf hanout','equipment','personal profit','other']}\r\n                                    // defaultValue={[]}\r\n                                    renderInput={(params) => (\r\n                                        <TextField\r\n                                            {...params}\r\n                                            variant=\"standard\"\r\n                                            label=\"name\"\r\n                                            placeholder=\"\"\r\n                                        />\r\n                                    )}\r\n                                />:\r\n                        <TextValidator\r\n                            className=\"mb-4 w-full\"\r\n                            label=\"name\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            value={name || ''}\r\n                            validators={[\r\n                                'required',\r\n                                'minStringLength: 4',\r\n                                'maxStringLength: 20',\r\n                            ]}\r\n                            errorMessages={['this field is required']}\r\n                        />}\r\n                    </Grid>\r\n                    <Grid item lg={5} md={6} sm={12} xs={12}>\r\n                        <TextValidator\r\n                            className=\"mb-4 w-full\"\r\n                            label=\"details\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            name=\"details\"\r\n                            value={details || ''}\r\n                            errorMessages={['this field is required']}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item lg={5} md={6} sm={12} xs={12}>\r\n                        <TextValidator\r\n                            className=\"mb-4 w-full\"\r\n                            label=\"amount en DA\"\r\n                            onChange={handleChange}\r\n                            type=\"number\"\r\n                            name=\"amount\"\r\n                            value={amount || ''}\r\n                            validators={['required']}\r\n                            errorMessages={['this field is required']}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item lg={5} md={6} sm={12} xs={12}>\r\n                        <Button\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            type=\"submit\"\r\n                        >\r\n                            <Icon>send</Icon>\r\n                            {type==\"E\"? <span className=\"pl-1 capitalize\">\r\n                                Ajouter Expance  \r\n                            </span>: <span className=\"pl-1 capitalize\">\r\n                                Ajouter Diposite  \r\n                            </span>} \r\n                            \r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item lg={5} md={6} sm={12} xs={12}>\r\n\r\n                <FormGroup>\r\n                            <FormControlLabel\r\n                                control={<Switch \r\n                                    checked={cash}\r\n                                    name=\"cash\"\r\n                                    onChange={handlecash}\r\n                                     defaultChecked />}\r\n                                label={type==\"E\"?\"Substract - from cash\":\"add  + to cash\"}  \r\n                            />\r\n                            <FormControlLabel\r\n                                \r\n                                control={<Switch  \r\n                                    checked={profit}\r\n                                    name=\"profit\"\r\n                                    \r\n                                    onChange={handleprofit}\r\n                                    defaultChecked/>}\r\n                                label={type==\"E\"?\"Substract - from profit\":\"add  + to profit\"}                               \r\n                                \r\n                            />\r\n                        </FormGroup>\r\n                </Grid>\r\n\r\n            </ValidatorForm>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    loading: state.expdip.loading,\r\n    suc: state.expdip.clients,\r\n    hasErrors: state.expdip.hasErrors,\r\n})\r\nexport default connect(mapStateToProps)(SimpleForm)\r\n","import React, { useEffect } from 'react'\r\nimport {\r\n    Card,\r\n    TextField,\r\n    MenuItem,\r\n    IconButton,\r\n    Icon,\r\n    Grid,\r\n} from '@material-ui/core'\r\nimport StatCard3 from './shared/StatCard3'\r\nimport ComparisonChart2 from './shared/ComparisonChart2'\r\nimport GaugeProgressCard from './shared/GuageProgressCard'\r\nimport FollowerCard from './shared/FollowerCard'\r\nimport FollowerCard2 from './shared/FollowerCard2'\r\n\r\nimport SimpleForm from './SimpleForm'\r\nimport { connect } from 'react-redux'\r\nimport { fetchData } from 'app/redux/actions/ExpansesDipositesActions'\r\nconst Analytics2 = ({dispatch}) => {\r\n    useEffect(() => {\r\n        dispatch(fetchData())\r\n      }, [dispatch])\r\n     \r\n    return (\r\n        <div className=\"analytics m-sm-30\">\r\n            <div className=\"flex justify-between items-center items-center mb-6\">\r\n                <h3 className=\"m-0\">Overview</h3>\r\n                <TextField\r\n                    defaultValue=\"1\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    select\r\n                >\r\n                    <MenuItem value=\"1\">This Month</MenuItem>\r\n                    <MenuItem value=\"2\">Last Month</MenuItem>\r\n                    <MenuItem value=\"3\">Six Month</MenuItem>\r\n                    <MenuItem value=\"4\">Last Year</MenuItem>\r\n                </TextField>\r\n            </div>\r\n\r\n            <StatCard3 />\r\n\r\n            <Card className=\"mt-5 mb-6\" elevation={3}>\r\n                <div className=\" px-4 py-3 mb-6 flex justify-between items-center bg-light-gray\">\r\n                    <span className=\"font-medium text-muted\">STATISTICS</span>\r\n                    <IconButton size=\"small\">\r\n                        <Icon>more_horiz</Icon>\r\n                    </IconButton>\r\n                </div>\r\n                <ComparisonChart2 height={400} />\r\n            </Card>\r\n            <Card className=\"mt-5 mb-6\" elevation={6}>\r\n                <div className=\" px-4 py-3 mb-6 flex justify-between items-center bg-light-gray\">\r\n                    <span className=\"font-medium text-muted\">STATISTICS</span>\r\n                    <IconButton size=\"small\">\r\n                        <Icon>more_horiz</Icon>\r\n                    </IconButton>\r\n                </div>\r\n                <FollowerCard2 />\r\n            </Card>\r\n     \r\n\r\n            <Grid container spacing={3}>\r\n                <Grid item md={4} xs={12}>\r\n                    <Card className=\"mt-5 pl-5 mb-6\" elevation={6}>\r\n                        <div className=\" px-4 py-3 mb-6 flex justify-between items-center bg-light-gray\">\r\n                            <span className=\"font-medium text-muted\">\r\n                                \r\n                            </span>\r\n                            <IconButton size=\"small\">\r\n                                <Icon>more_horiz</Icon>\r\n                            </IconButton>\r\n                        </div>\r\n                        <SimpleForm />\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item md={4} xs={12}>\r\n                    <GaugeProgressCard />\r\n                </Grid>\r\n                <Grid item md={4} xs={12}>\r\n                    <FollowerCard />\r\n                    <FollowerCard2 />\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    loading: state.expdip.loading,\r\n    suc: state.expdip.clients,\r\n    hasErrors: state.expdip.hasErrors,\r\n})\r\nexport default connect(mapStateToProps)(Analytics2)"],"sourceRoot":""}
{"version":3,"sources":["app/views/material-kit/snackbar/SimpleSnackbar.jsx","app/views/material-kit/snackbar/CustomizedSnackbar.jsx","app/views/material-kit/snackbar/PositionedSnackbar.jsx","app/views/material-kit/snackbar/LongLengthSnackbar.jsx","app/views/material-kit/snackbar/ConsecutiveSnackbar.jsx","app/views/material-kit/snackbar/DirectionSnackbar.jsx","app/views/material-kit/snackbar/StackedSnackbar.jsx","app/views/material-kit/snackbar/TransitionSnackbar.jsx","app/views/material-kit/snackbar/AppSnackbar.jsx"],"names":["useStyles","makeStyles","theme","close","padding","spacing","SimpleSnackbar","classes","React","useState","open","setOpen","handleClose","event","reason","Button","onClick","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","message","id","action","color","size","IconButton","className","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","useStyles1","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","marginRight","display","alignItems","MySnackbarContentWrapper","props","variant","other","Icon","SnackbarContent","clsx","useStyles2","margin","CustomizedSnackbars","PositionedSnackbar","state","setState","handleClick","newState","root","maxWidth","snackbar","LongTextSnackbar","ConsecutiveSnackbars","queue","push","key","Date","getTime","processQueue","length","messageInfo","shift","handleExited","this","onExited","Component","withStyles","TransitionLeft","Slide","direction","TransitionUp","TransitionRight","TransitionDown","DirectionSnackbar","Transition","TransitionComponent","StackedSnackbar","enqueueSnackbar","useSnackbar","Fragment","IntegrationNotistack","maxSnack","SlideTransition","GrowTransition","Grow","TransitionsSnackbar","Fade","AppSnackbar","routeSegments","name","path","title","ConsecutiveSnackbar"],"mappings":"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","file":"static/js/44.c3fdd43d.chunk.js","sourcesContent":["import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    close: {\r\n        padding: theme.spacing(0.5),\r\n    },\r\n}))\r\n\r\nexport default function SimpleSnackbar() {\r\n    const classes = useStyles()\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    function handleClick() {\r\n        setOpen(true)\r\n    }\r\n\r\n    function handleClose(event, reason) {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button onClick={handleClick}>Open simple snackbar</Button>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                message={<span id=\"message-id\">Note archived</span>}\r\n                action={[\r\n                    <Button\r\n                        key=\"undo\"\r\n                        color=\"secondary\"\r\n                        size=\"small\"\r\n                        onClick={handleClose}\r\n                    >\r\n                        UNDO\r\n                    </Button>,\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        className={classes.close}\r\n                        onClick={handleClose}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>,\r\n                ]}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport clsx from 'clsx'\r\nimport Button from '@material-ui/core/Button'\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\r\nimport ErrorIcon from '@material-ui/icons/Error'\r\nimport InfoIcon from '@material-ui/icons/Info'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport { amber, green } from '@material-ui/core/colors'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent'\r\nimport WarningIcon from '@material-ui/icons/Warning'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n}\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n}))\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles1()\r\n    const { className, message, onClose, variant, ...other } = props\r\n    const Icon = variantIcon[variant]\r\n\r\n    return (\r\n        <SnackbarContent\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n                    <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n                    {message}\r\n                </span>\r\n            }\r\n            action={[\r\n                <IconButton\r\n                    key=\"close\"\r\n                    aria-label=\"Close\"\r\n                    color=\"inherit\"\r\n                    onClick={onClose}\r\n                >\r\n                    <CloseIcon className={classes.icon} />\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    )\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info'])\r\n        .isRequired,\r\n}\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}))\r\n\r\nexport default function CustomizedSnackbars() {\r\n    const classes = useStyles2()\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    function handleClick() {\r\n        setOpen(true)\r\n    }\r\n\r\n    function handleClose(event, reason) {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"outlined\"\r\n                className={classes.margin}\r\n                onClick={handleClick}\r\n            >\r\n                Open success snackbar\r\n            </Button>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n            >\r\n                <MySnackbarContentWrapper\r\n                    onClose={handleClose}\r\n                    variant=\"success\"\r\n                    message=\"This is a success message!\"\r\n                />\r\n            </Snackbar>\r\n            <MySnackbarContentWrapper\r\n                variant=\"error\"\r\n                className={classes.margin}\r\n                message=\"This is an error message!\"\r\n            />\r\n            <MySnackbarContentWrapper\r\n                variant=\"warning\"\r\n                className={classes.margin}\r\n                message=\"This is a warning message!\"\r\n            />\r\n            <MySnackbarContentWrapper\r\n                variant=\"info\"\r\n                className={classes.margin}\r\n                message=\"This is an information message!\"\r\n            />\r\n            <MySnackbarContentWrapper\r\n                variant=\"success\"\r\n                className={classes.margin}\r\n                message=\"This is a success message!\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\n\r\nexport default function PositionedSnackbar() {\r\n    const [state, setState] = React.useState({\r\n        open: false,\r\n        vertical: 'top',\r\n        horizontal: 'center',\r\n    })\r\n\r\n    const { vertical, horizontal, open } = state\r\n\r\n    const handleClick = (newState) => () => {\r\n        setState({ open: true, ...newState })\r\n    }\r\n\r\n    function handleClose() {\r\n        setState({ ...state, open: false })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                onClick={handleClick({ vertical: 'top', horizontal: 'center' })}\r\n            >\r\n                Top-Center\r\n            </Button>\r\n            <Button\r\n                onClick={handleClick({ vertical: 'top', horizontal: 'right' })}\r\n            >\r\n                Top-Right\r\n            </Button>\r\n            <Button\r\n                onClick={handleClick({\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                })}\r\n            >\r\n                Bottom-Right\r\n            </Button>\r\n            <Button\r\n                onClick={handleClick({\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                })}\r\n            >\r\n                Bottom-Center\r\n            </Button>\r\n            <Button\r\n                onClick={handleClick({\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                })}\r\n            >\r\n                Bottom-Left\r\n            </Button>\r\n            <Button\r\n                onClick={handleClick({ vertical: 'top', horizontal: 'left' })}\r\n            >\r\n                Top-Left\r\n            </Button>\r\n            <Snackbar\r\n                anchorOrigin={{ vertical, horizontal }}\r\n                key={`${vertical},${horizontal}`}\r\n                open={open}\r\n                onClose={handleClose}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                message={<span id=\"message-id\">I love snacks</span>}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent'\r\n\r\nconst action = (\r\n    <Button color=\"secondary\" size=\"small\">\r\n        lorem ipsum dolorem\r\n    </Button>\r\n)\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 600,\r\n    },\r\n    snackbar: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}))\r\n\r\nexport default function LongTextSnackbar() {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <SnackbarContent\r\n                className={classes.snackbar}\r\n                message=\"I love snacks.\"\r\n                action={action}\r\n            />\r\n            <SnackbarContent\r\n                className={classes.snackbar}\r\n                message={`I love candy. I love cookies. I love cupcakes. \\\r\n          I love cheesecake. I love chocolate.`}\r\n            />\r\n            <SnackbarContent\r\n                className={classes.snackbar}\r\n                message=\"I love candy. I love cookies. I love cupcakes.\"\r\n                action={action}\r\n            />\r\n            <SnackbarContent\r\n                className={classes.snackbar}\r\n                message={\r\n                    'I love candy. I love cookies. I love cupcakes. \\\r\n          I love cheesecake. I love chocolate.'\r\n                }\r\n                action={action}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nconst styles = (theme) => ({\r\n    close: {\r\n        padding: theme.spacing(0.5),\r\n    },\r\n})\r\n\r\nclass ConsecutiveSnackbars extends React.Component {\r\n    queue = []\r\n\r\n    state = {\r\n        open: false,\r\n    }\r\n\r\n    handleClick = (message) => () => {\r\n        this.queue.push({\r\n            message,\r\n            key: new Date().getTime(),\r\n        })\r\n\r\n        if (this.state.open) {\r\n            // immediately begin dismissing current message\r\n            // to start showing new one\r\n            this.setState({ open: false })\r\n        } else {\r\n            this.processQueue()\r\n        }\r\n    }\r\n\r\n    processQueue = () => {\r\n        if (this.queue.length > 0) {\r\n            this.setState({\r\n                messageInfo: this.queue.shift(),\r\n                open: true,\r\n            })\r\n        }\r\n    }\r\n\r\n    handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n        this.setState({ open: false })\r\n    }\r\n\r\n    handleExited = () => {\r\n        this.processQueue()\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props\r\n        const { messageInfo = {} } = this.state\r\n\r\n        return (\r\n            <div>\r\n                <Button onClick={this.handleClick('Message A')}>\r\n                    Show message A\r\n                </Button>\r\n                <Button onClick={this.handleClick('Message B')}>\r\n                    Show message B\r\n                </Button>\r\n                <Snackbar\r\n                    key={messageInfo.key}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    open={this.state.open}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.handleClose}\r\n                    onExited={this.handleExited}\r\n                    ContentProps={{\r\n                        'aria-describedby': 'message-id',\r\n                    }}\r\n                    message={<span id=\"message-id\">{messageInfo.message}</span>}\r\n                    action={[\r\n                        <Button\r\n                            key=\"undo\"\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                            onClick={this.handleClose}\r\n                        >\r\n                            UNDO\r\n                        </Button>,\r\n                        <IconButton\r\n                            key=\"close\"\r\n                            aria-label=\"Close\"\r\n                            color=\"inherit\"\r\n                            className={classes.close}\r\n                            onClick={this.handleClose}\r\n                        >\r\n                            <CloseIcon />\r\n                        </IconButton>,\r\n                    ]}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nConsecutiveSnackbars.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(ConsecutiveSnackbars)\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport Slide from '@material-ui/core/Slide'\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"left\" />\r\n}\r\n\r\nfunction TransitionUp(props) {\r\n    return <Slide {...props} direction=\"up\" />\r\n}\r\n\r\nfunction TransitionRight(props) {\r\n    return <Slide {...props} direction=\"right\" />\r\n}\r\n\r\nfunction TransitionDown(props) {\r\n    return <Slide {...props} direction=\"down\" />\r\n}\r\n\r\nclass DirectionSnackbar extends React.Component {\r\n    state = {\r\n        open: false,\r\n    }\r\n\r\n    handleClick = (Transition) => () => {\r\n        this.setState({ open: true, Transition })\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button onClick={this.handleClick(TransitionLeft)}>\r\n                    Right\r\n                </Button>\r\n                <Button onClick={this.handleClick(TransitionUp)}>Up</Button>\r\n                <Button onClick={this.handleClick(TransitionRight)}>\r\n                    Left\r\n                </Button>\r\n                <Button onClick={this.handleClick(TransitionDown)}>Down</Button>\r\n                <Snackbar\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    TransitionComponent={this.state.Transition}\r\n                    ContentProps={{\r\n                        'aria-describedby': 'message-id',\r\n                    }}\r\n                    message={<span id=\"message-id\">I love snacks</span>}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DirectionSnackbar\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport { SnackbarProvider, useSnackbar } from 'notistack'\r\n\r\nfunction StackedSnackbar() {\r\n    const { enqueueSnackbar } = useSnackbar()\r\n\r\n    const handleClick = () => {\r\n        enqueueSnackbar('I love snacks.')\r\n    }\r\n\r\n    const handleClickVariant = (variant) => () => {\r\n        // variant could be success, error, warning, info, or default\r\n        enqueueSnackbar('This is a warning message!', { variant })\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Button onClick={handleClick}>Show snackbar</Button>\r\n            <Button onClick={handleClickVariant('warning')}>\r\n                Show warning snackbar\r\n            </Button>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default function IntegrationNotistack() {\r\n    return (\r\n        <SnackbarProvider maxSnack={3}>\r\n            <StackedSnackbar />\r\n        </SnackbarProvider>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport Fade from '@material-ui/core/Fade'\r\nimport Slide from '@material-ui/core/Slide'\r\nimport Grow from '@material-ui/core/Grow'\r\n\r\nfunction SlideTransition(props) {\r\n    return <Slide {...props} direction=\"up\" />\r\n}\r\n\r\nfunction GrowTransition(props) {\r\n    return <Grow {...props} />\r\n}\r\n\r\nexport default function TransitionsSnackbar() {\r\n    const [state, setState] = React.useState({\r\n        open: false,\r\n        Transition: Fade,\r\n    })\r\n\r\n    const handleClick = (Transition) => () => {\r\n        setState({\r\n            open: true,\r\n            Transition,\r\n        })\r\n    }\r\n\r\n    function handleClose() {\r\n        setState({\r\n            ...state,\r\n            open: false,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button onClick={handleClick(GrowTransition)}>\r\n                Grow Transition\r\n            </Button>\r\n            <Button onClick={handleClick(Fade)}>Fade Transition</Button>\r\n            <Button onClick={handleClick(SlideTransition)}>\r\n                Slide Transition\r\n            </Button>\r\n            <Snackbar\r\n                open={state.open}\r\n                onClose={handleClose}\r\n                TransitionComponent={state.Transition}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                message={<span id=\"message-id\">I love snacks</span>}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Breadcrumb, SimpleCard } from 'app/components'\r\nimport SimpleSnackbar from './SimpleSnackbar'\r\nimport CustomizedSnackbars from './CustomizedSnackbar'\r\nimport PositionedSnackbar from './PositionedSnackbar'\r\nimport LongTextSnackbar from './LongLengthSnackbar'\r\nimport ConsecutiveSnackbar from './ConsecutiveSnackbar'\r\nimport DirectionSnackbar from './DirectionSnackbar'\r\nimport IntegrationNotistack from './StackedSnackbar'\r\nimport TransitionsSnackbar from './TransitionSnackbar'\r\n\r\nconst AppSnackbar = () => {\r\n    return (\r\n        <div className=\"m-sm-30\">\r\n            <div className=\"mb-sm-30\">\r\n                <Breadcrumb\r\n                    routeSegments={[\r\n                        { name: 'Material', path: '/material' },\r\n                        { name: 'Snackbar' },\r\n                    ]}\r\n                />\r\n            </div>\r\n            <SimpleCard title=\"simple snackbar\">\r\n                <SimpleSnackbar />\r\n            </SimpleCard>\r\n            <div className=\"py-3\" />\r\n            <SimpleCard title=\"customized snackbar\">\r\n                <CustomizedSnackbars />\r\n            </SimpleCard>\r\n            <div className=\"py-3\" />\r\n            <SimpleCard title=\"positioned snackbar\">\r\n                <PositionedSnackbar />\r\n            </SimpleCard>\r\n            <div className=\"py-3\" />\r\n            <SimpleCard title=\"message length\">\r\n                <LongTextSnackbar />\r\n            </SimpleCard>\r\n            <div className=\"py-3\" />\r\n            <SimpleCard title=\"transition\">\r\n                <TransitionsSnackbar />\r\n            </SimpleCard>\r\n            <div className=\"py-3\" />\r\n            <SimpleCard title=\"consecutive snackbar\">\r\n                <ConsecutiveSnackbar />\r\n            </SimpleCard>\r\n            <div className=\"py-3\" />\r\n            <SimpleCard title=\"Control Slide direction\">\r\n                <DirectionSnackbar />\r\n            </SimpleCard>\r\n            <div className=\"py-3\" />\r\n            <SimpleCard title=\"complementary project\">\r\n                <IntegrationNotistack />\r\n            </SimpleCard>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppSnackbar\r\n"],"sourceRoot":""}
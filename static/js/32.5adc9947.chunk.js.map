{"version":3,"sources":["app/views/material-kit/dialog/SimpleDialog.jsx","app/views/material-kit/dialog/SimpleAlerts.jsx","app/views/material-kit/dialog/DialogTransition.jsx","app/views/material-kit/dialog/FormDialog.jsx","app/views/material-kit/dialog/CustomizedDialog.jsx","app/views/material-kit/dialog/FullScreenDialog.jsx","app/views/material-kit/dialog/OptimalSizeDialog.jsx","app/views/material-kit/dialog/ResponsiveDialog.jsx","app/views/material-kit/dialog/ConfirmationDialog.jsx","app/views/material-kit/dialog/AppDialog.jsx"],"names":["emails","useStyles","makeStyles","avatar","backgroundColor","blue","color","SimpleDialog","props","classes","onClose","selectedValue","other","handleListItemClick","value","id","map","email","button","onClick","className","primary","SimpleDialogDemo","React","useState","open","setOpen","setSelectedValue","variant","AlertDialog","handleClose","Button","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","Transition","forwardRef","ref","Slide","direction","AlertDialogSlide","TransitionComponent","keepMounted","FormDialog","TextField","margin","label","type","fullWidth","withStyles","theme","root","padding","spacing","closeButton","position","right","top","palette","grey","children","disableTypography","Typography","IconButton","MuiDialogContent","MuiDialogActions","CustomizedDialogs","state","handleClickOpen","setState","this","dividers","gutterBottom","Component","appBar","title","marginLeft","flex","FullScreenDialog","fullScreen","AppBar","Toolbar","edge","List","ListItem","ListItemText","secondary","Divider","form","display","flexDirection","width","formControl","marginTop","minWidth","formControlLabel","MaxWidthDialog","setFullWidth","maxWidth","setMaxWidth","Fragment","noValidate","FormControl","InputLabel","htmlFor","Select","onChange","event","target","inputProps","name","MenuItem","FormControlLabel","control","Switch","checked","ResponsiveDialog","useTheme","useMediaQuery","breakpoints","down","options","ConfirmationDialogRaw","valueProp","setValue","radioGroupRef","useRef","useEffect","disableBackdropClick","disableEscapeKeyDown","onEntering","current","focus","RadioGroup","newValue","option","Radio","background","paper","maxHeight","ConfirmationDialog","component","role","divider","disabled","AppDialog","routeSegments","path","CustomizedDialog"],"mappings":"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","file":"static/js/32.5adc9947.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport PersonIcon from '@material-ui/icons/Person'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { blue } from '@material-ui/core/colors'\r\n\r\nconst emails = ['username@gmail.com', 'user02@gmail.com']\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        backgroundColor: blue[100],\r\n        color: blue[600],\r\n    },\r\n})\r\n\r\nfunction SimpleDialog(props) {\r\n    const classes = useStyles()\r\n    const { onClose, selectedValue, ...other } = props\r\n\r\n    function handleClose() {\r\n        onClose(selectedValue)\r\n    }\r\n\r\n    function handleListItemClick(value) {\r\n        onClose(value)\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            onClose={handleClose}\r\n            aria-labelledby=\"simple-dialog-title\"\r\n            {...other}\r\n        >\r\n            <DialogTitle id=\"simple-dialog-title\">\r\n                Set backup account\r\n            </DialogTitle>\r\n            <List>\r\n                {emails.map((email) => (\r\n                    <ListItem\r\n                        button\r\n                        onClick={() => handleListItemClick(email)}\r\n                        key={email}\r\n                    >\r\n                        <ListItemAvatar>\r\n                            <Avatar className={classes.avatar}>\r\n                                <PersonIcon />\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText primary={email} />\r\n                    </ListItem>\r\n                ))}\r\n\r\n                <ListItem\r\n                    button\r\n                    onClick={() => handleListItemClick('addAccount')}\r\n                >\r\n                    <ListItemAvatar>\r\n                        <Avatar>\r\n                            <AddIcon />\r\n                        </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary=\"add account\" />\r\n                </ListItem>\r\n            </List>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n    onClose: PropTypes.func,\r\n    open: PropTypes.bool,\r\n    selectedValue: PropTypes.string,\r\n}\r\n\r\nexport default function SimpleDialogDemo() {\r\n    const [open, setOpen] = React.useState(false)\r\n    const [selectedValue, setSelectedValue] = React.useState(emails[1])\r\n\r\n    function handleClickOpen() {\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleClose = (value) => {\r\n        setOpen(false)\r\n        setSelectedValue(value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"subtitle1\">\r\n                Selected: {selectedValue}\r\n            </Typography>\r\n            <br />\r\n            <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen}\r\n            >\r\n                Open simple dialog\r\n            </Button>\r\n            <SimpleDialog\r\n                selectedValue={selectedValue}\r\n                open={open}\r\n                onClose={handleClose}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\n\r\nexport default function AlertDialog() {\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    function handleClickOpen() {\r\n        setOpen(true)\r\n    }\r\n\r\n    function handleClose() {\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen}\r\n            >\r\n                Open alert dialog\r\n            </Button>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Use Google's location service?\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Let Google help apps determine location. This means\r\n                        sending anonymous location data to Google, even when no\r\n                        apps are running.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Disagree\r\n                    </Button>\r\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n                        Agree\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport Slide from '@material-ui/core/Slide'\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />\r\n})\r\n\r\nexport default function AlertDialogSlide() {\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    function handleClickOpen() {\r\n        setOpen(true)\r\n    }\r\n\r\n    function handleClose() {\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen}\r\n            >\r\n                Slide in alert dialog\r\n            </Button>\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">\r\n                    {\"Use Google's location service?\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        Let Google help apps determine location. This means\r\n                        sending anonymous location data to Google, even when no\r\n                        apps are running.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Disagree\r\n                    </Button>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Agree\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\n\r\nexport default function FormDialog() {\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    function handleClickOpen() {\r\n        setOpen(true)\r\n    }\r\n\r\n    function handleClose() {\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen}\r\n            >\r\n                Open form dialog\r\n            </Button>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        To subscribe to this website, please enter your email\r\n                        address here. We will send updates occasionally.\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Email Address\"\r\n                        type=\"email\"\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                        onClick={handleClose}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Subscribe\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle'\r\nimport MuiDialogContent from '@material-ui/core/DialogContent'\r\nimport MuiDialogActions from '@material-ui/core/DialogActions'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n})\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose } = props\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton\r\n                    aria-label=\"Close\"\r\n                    className={classes.closeButton}\r\n                    onClick={onClose}\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    )\r\n})\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))(MuiDialogContent)\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(1),\r\n    },\r\n}))(MuiDialogActions)\r\n\r\nclass CustomizedDialogs extends React.Component {\r\n    state = {\r\n        open: false,\r\n    }\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({\r\n            open: true,\r\n        })\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    onClick={this.handleClickOpen}\r\n                >\r\n                    Open dialog\r\n                </Button>\r\n                <Dialog\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={this.state.open}\r\n                >\r\n                    <DialogTitle\r\n                        id=\"customized-dialog-title\"\r\n                        onClose={this.handleClose}\r\n                    >\r\n                        Modal title\r\n                    </DialogTitle>\r\n                    <DialogContent dividers>\r\n                        <Typography gutterBottom>\r\n                            Cras mattis consectetur purus sit amet fermentum.\r\n                            Cras justo odio, dapibus ac facilisis in, egestas\r\n                            eget quam. Morbi leo risus, porta ac consectetur ac,\r\n                            vestibulum at eros.\r\n                        </Typography>\r\n                        <Typography gutterBottom>\r\n                            Praesent commodo cursus magna, vel scelerisque nisl\r\n                            consectetur et. Vivamus sagittis lacus vel augue\r\n                            laoreet rutrum faucibus dolor auctor.\r\n                        </Typography>\r\n                        <Typography gutterBottom>\r\n                            Aenean lacinia bibendum nulla sed consectetur.\r\n                            Praesent commodo cursus magna, vel scelerisque nisl\r\n                            consectetur et. Donec sed odio dui. Donec\r\n                            ullamcorper nulla non metus auctor fringilla.\r\n                        </Typography>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Save changes\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CustomizedDialogs\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport List from '@material-ui/core/List'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport Slide from '@material-ui/core/Slide'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        position: 'relative',\r\n    },\r\n    title: {\r\n        marginLeft: theme.spacing(2),\r\n        flex: 1,\r\n    },\r\n}))\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />\r\n})\r\n\r\nexport default function FullScreenDialog() {\r\n    const classes = useStyles()\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    function handleClickOpen() {\r\n        setOpen(true)\r\n    }\r\n\r\n    function handleClose() {\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen}\r\n            >\r\n                Open full-screen dialog\r\n            </Button>\r\n            <Dialog\r\n                fullScreen\r\n                open={open}\r\n                onClose={handleClose}\r\n                TransitionComponent={Transition}\r\n            >\r\n                <AppBar className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            edge=\"start\"\r\n                            color=\"inherit\"\r\n                            onClick={handleClose}\r\n                            aria-label=\"Close\"\r\n                        >\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                            Sound\r\n                        </Typography>\r\n                        <Button color=\"inherit\" onClick={handleClose}>\r\n                            save\r\n                        </Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <List>\r\n                    <ListItem button>\r\n                        <ListItemText\r\n                            primary=\"Phone ringtone\"\r\n                            secondary=\"Titania\"\r\n                        />\r\n                    </ListItem>\r\n                    <Divider />\r\n                    <ListItem button>\r\n                        <ListItemText\r\n                            primary=\"Default notification ringtone\"\r\n                            secondary=\"Tethys\"\r\n                        />\r\n                    </ListItem>\r\n                </List>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Select from '@material-ui/core/Select'\r\nimport Switch from '@material-ui/core/Switch'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        margin: 'auto',\r\n        width: 'fit-content',\r\n    },\r\n    formControl: {\r\n        marginTop: theme.spacing(2),\r\n        minWidth: 120,\r\n    },\r\n    formControlLabel: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n}))\r\n\r\nexport default function MaxWidthDialog() {\r\n    const classes = useStyles()\r\n    const [open, setOpen] = React.useState(false)\r\n    const [fullWidth, setFullWidth] = React.useState(true)\r\n    const [maxWidth, setMaxWidth] = React.useState('sm')\r\n\r\n    function handleClickOpen() {\r\n        setOpen(true)\r\n    }\r\n\r\n    function handleClose() {\r\n        setOpen(false)\r\n    }\r\n\r\n    function handleMaxWidthChange(event) {\r\n        setMaxWidth(event.target.value)\r\n    }\r\n\r\n    function handleFullWidthChange(event) {\r\n        setFullWidth(event.target.checked)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen}\r\n            >\r\n                Open max-width dialog\r\n            </Button>\r\n            <Dialog\r\n                fullWidth={fullWidth}\r\n                maxWidth={maxWidth}\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"max-width-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"max-width-dialog-title\">\r\n                    Optional sizes\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        You can set my maximum width and whether to adapt or\r\n                        not.\r\n                    </DialogContentText>\r\n                    <form className={classes.form} noValidate>\r\n                        <FormControl className={classes.formControl}>\r\n                            <InputLabel htmlFor=\"max-width\">\r\n                                maxWidth\r\n                            </InputLabel>\r\n                            <Select\r\n                                value={maxWidth}\r\n                                onChange={handleMaxWidthChange}\r\n                                inputProps={{\r\n                                    name: 'max-width',\r\n                                    id: 'max-width',\r\n                                }}\r\n                            >\r\n                                <MenuItem value={false}>false</MenuItem>\r\n                                <MenuItem value=\"xs\">xs</MenuItem>\r\n                                <MenuItem value=\"sm\">sm</MenuItem>\r\n                                <MenuItem value=\"md\">md</MenuItem>\r\n                                <MenuItem value=\"lg\">lg</MenuItem>\r\n                                <MenuItem value=\"xl\">xl</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControlLabel\r\n                            className={classes.formControlLabel}\r\n                            control={\r\n                                <Switch\r\n                                    checked={fullWidth}\r\n                                    onChange={handleFullWidthChange}\r\n                                    value=\"fullWidth\"\r\n                                />\r\n                            }\r\n                            label=\"Full width\"\r\n                        />\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\r\nimport { useTheme } from '@material-ui/core/styles'\r\n\r\nexport default function ResponsiveDialog() {\r\n    const [open, setOpen] = React.useState(false)\r\n    const theme = useTheme()\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'))\r\n\r\n    function handleClickOpen() {\r\n        setOpen(true)\r\n    }\r\n\r\n    function handleClose() {\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen}\r\n            >\r\n                Open responsive dialog\r\n            </Button>\r\n            <Dialog\r\n                fullScreen={fullScreen}\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"responsive-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"responsive-dialog-title\">\r\n                    {\"Use Google's location service?\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Let Google help apps determine location. This means\r\n                        sending anonymous location data to Google, even when no\r\n                        apps are running.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Disagree\r\n                    </Button>\r\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n                        Agree\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\n\r\nconst options = [\r\n    'None',\r\n    'Atria',\r\n    'Callisto',\r\n    'Dione',\r\n    'Ganymede',\r\n    'Hangouts Call',\r\n    'Luna',\r\n    'Oberon',\r\n    'Phobos',\r\n    'Pyxis',\r\n    'Sedna',\r\n    'Titania',\r\n    'Triton',\r\n    'Umbriel',\r\n]\r\n\r\nfunction ConfirmationDialogRaw(props) {\r\n    const { onClose, value: valueProp, open, ...other } = props\r\n    const [value, setValue] = React.useState(valueProp)\r\n    const radioGroupRef = React.useRef(null)\r\n\r\n    React.useEffect(() => {\r\n        if (!open) {\r\n            setValue(valueProp)\r\n        }\r\n    }, [valueProp, open])\r\n\r\n    function handleEntering() {\r\n        if (radioGroupRef.current != null) {\r\n            radioGroupRef.current.focus()\r\n        }\r\n    }\r\n\r\n    function handleCancel() {\r\n        onClose()\r\n    }\r\n\r\n    function handleOk() {\r\n        onClose(value)\r\n    }\r\n\r\n    function handleChange(event, newValue) {\r\n        setValue(newValue)\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            disableBackdropClick\r\n            disableEscapeKeyDown\r\n            maxWidth=\"xs\"\r\n            onEntering={handleEntering}\r\n            aria-labelledby=\"confirmation-dialog-title\"\r\n            open={open}\r\n            {...other}\r\n        >\r\n            <DialogTitle id=\"confirmation-dialog-title\">\r\n                Phone Ringtone\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                <RadioGroup\r\n                    ref={radioGroupRef}\r\n                    aria-label=\"Ringtone\"\r\n                    name=\"ringtone\"\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                >\r\n                    {options.map((option) => (\r\n                        <FormControlLabel\r\n                            value={option}\r\n                            key={option}\r\n                            control={<Radio />}\r\n                            label={option}\r\n                        />\r\n                    ))}\r\n                </RadioGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    onClick={handleCancel}\r\n                >\r\n                    Cancel\r\n                </Button>\r\n                <Button onClick={handleOk} color=\"primary\">\r\n                    Ok\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nConfirmationDialogRaw.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    paper: {\r\n        width: '80%',\r\n        maxHeight: 435,\r\n    },\r\n}))\r\n\r\nexport default function ConfirmationDialog() {\r\n    const classes = useStyles()\r\n    const [open, setOpen] = React.useState(false)\r\n    const [value, setValue] = React.useState('Dione')\r\n\r\n    function handleClickListItem() {\r\n        setOpen(true)\r\n    }\r\n\r\n    function handleClose(newValue) {\r\n        setOpen(false)\r\n\r\n        if (newValue) {\r\n            setValue(newValue)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <List component=\"div\" role=\"list\">\r\n                <ListItem button divider disabled role=\"listitem\">\r\n                    <ListItemText primary=\"Interruptions\" />\r\n                </ListItem>\r\n                <ListItem\r\n                    button\r\n                    divider\r\n                    aria-controls=\"ringtone-menu\"\r\n                    aria-label=\"Phone ringtone\"\r\n                    onClick={handleClickListItem}\r\n                    role=\"listitem\"\r\n                >\r\n                    <ListItemText primary=\"Phone ringtone\" secondary={value} />\r\n                </ListItem>\r\n                <ListItem button divider disabled role=\"listitem\">\r\n                    <ListItemText\r\n                        primary=\"Default notification ringtone\"\r\n                        secondary=\"Tethys\"\r\n                    />\r\n                </ListItem>\r\n                <ConfirmationDialogRaw\r\n                    classes={{\r\n                        paper: classes.paper,\r\n                    }}\r\n                    id=\"ringtone-menu\"\r\n                    keepMounted\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    value={value}\r\n                />\r\n            </List>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Breadcrumb, SimpleCard } from 'app/components'\r\nimport SimpleDialogDemo from './SimpleDialog'\r\nimport AlertDialog from './SimpleAlerts'\r\nimport AlertDialogSlide from './DialogTransition'\r\nimport FormDialog from './FormDialog'\r\nimport CustomizedDialogs from './CustomizedDialog'\r\nimport FullScreenDialog from './FullScreenDialog'\r\nimport MaxWidthDialog from './OptimalSizeDialog'\r\nimport ResponsiveDialog from './ResponsiveDialog'\r\nimport ConfirmationDialog from './ConfirmationDialog'\r\n\r\nconst AppDialog = () => {\r\n    return (\r\n        <div className=\"m-sm-30\">\r\n            <div className=\"mb-sm-30\">\r\n                <Breadcrumb\r\n                    routeSegments={[\r\n                        { name: 'Material', path: '/material' },\r\n                        { name: 'Dialog' },\r\n                    ]}\r\n                />\r\n            </div>\r\n            <SimpleCard title=\"simple Dialog\">\r\n                <SimpleDialogDemo />\r\n            </SimpleCard>\r\n            <div className=\"py-3\" />\r\n            <SimpleCard title=\"alert dialog\">\r\n                <AlertDialog />\r\n            </SimpleCard>\r\n            <div className=\"py-3\" />\r\n            <SimpleCard title=\"transition\">\r\n                <AlertDialogSlide />\r\n            </SimpleCard>\r\n            <div className=\"py-3\" />\r\n            <SimpleCard title=\"form dialog\">\r\n                <FormDialog />\r\n            </SimpleCard>\r\n            <div className=\"py-3\" />\r\n            <SimpleCard title=\"customized dialog\">\r\n                <CustomizedDialogs />\r\n            </SimpleCard>\r\n            <div className=\"py-3\" />\r\n            <SimpleCard title=\"full-screen dialog\">\r\n                <FullScreenDialog />\r\n            </SimpleCard>\r\n            <div className=\"py-3\" />\r\n            <SimpleCard title=\"optimized size dialog\">\r\n                <MaxWidthDialog />\r\n            </SimpleCard>\r\n            <div className=\"py-3\" />\r\n            <SimpleCard title=\"responsive dialog\">\r\n                <ResponsiveDialog />\r\n            </SimpleCard>\r\n            <div className=\"py-3\" />\r\n            <SimpleCard title=\"confirmation dialog\">\r\n                <ConfirmationDialog />\r\n            </SimpleCard>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppDialog\r\n"],"sourceRoot":""}
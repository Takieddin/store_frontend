{"version":3,"sources":["app/contexts/NotificationContext.js","app/hooks/useNotification.js","app/components/NotificationBar/NotificationBar.jsx","app/components/ShoppingCart/ShoppingCart.jsx","app/components/MatxLayout/Layout1/Layout1Topbar.jsx","app/components/Sidenav/Sidenav.jsx","app/components/Brand/Brand.jsx","app/components/MatxLayout/Layout1/vert.jpg","app/components/MatxLayout/Layout1/Layout1Sidenav.jsx","app/components/Footer/Footer.jsx","app/components/SecondarySidebar/SecondarySidebarToggle.jsx","app/components/MatxCustomizer/BadgeSelected.jsx","app/components/MatxCustomizer/MatxCustomizer.jsx","app/components/SecondarySidebar/SecondarySidebarContent.jsx","app/components/MatxTheme/SidenavTheme/SidenavTheme.jsx","app/components/MatxLayout/Layout1/Layout1.jsx"],"names":["reducer","state","action","type","notifications","payload","NotificationContext","createContext","deleteNotification","clearNotifications","getNotifications","createNotification","NotificationProvider","settings","children","useReducer","dispatch","notificationID","a","axios","post","id","res","data","console","error","get","notification","useEffect","Provider","value","useNotification","useContext","useStyles","makeStyles","palette","width","height","notificationCard","cursor","display","right","marginTop","top","zIndex","position","borderRadius","opacity","NotificationBar","container","React","useState","panelOpen","setPanelOpen","classes","useSettings","handleDrawerToggle","IconButton","onClick","Badge","color","badgeContent","length","Icon","ThemeProvider","theme","themes","activeTheme","Drawer","variant","anchor","open","onClose","ModalProps","keepMounted","className","map","clsx","size","fontSize","to","path","Card","elevation","icon","name","heading","getTimeDifference","Date","timestamp","title","subtitle","Button","miniCart","transition","background","cartListLoaded","ShoppingCart","totalCost","setTotalCost","useDispatch","history","useHistory","user","useAuth","cartList","useSelector","ecommerce","getCartList","total","forEach","product","price","amount","updateCartAmount","disabled","src","imgUrl","alt","deleteProductFromCart","userId","push","toFixed","topbar","backgroundColor","primary","main","paddingLeft","paddingRight","breakpoints","down","boxShadow","shadows","userMenu","alignItems","padding","margin","menuItem","minWidth","Layout1Topbar","useTheme","updateSettings","logout","isMdScreen","useMediaQuery","fixed","layout1Settings","mode","sidebarSettings","leftSidebar","menuButton","Hidden","xsDown","Avatar","avatar","MenuItem","memo","scrollable","sidenavMobileOverlay","left","bottom","up","Sidenav","options","suppressScrollX","items","navigations","activeLayoutSettingsName","activeLayout","activeLayoutSettings","updateSidebarMode","brand","hideOnCompact","Brand","sidenavHoverShow","r","backgroundImage","backgroundSize","sidenav","primaryRGB","bgImgURL","backgroundPosition","overflow","text","img","maxWidth","userInfo","Layout1Sidenav","convertHexToRGB","style","smDown","Switch","onChange","checked","footer","minHeight","flexDirection","appbar","Footer","footerTheme","AppBar","Toolbar","href","toggle","withStyles","badge","label","secondary","dark","fontWeight","transform","marginBottom","letterSpacing","contrastText","helpText","maxCustomizer","customizerCloseButton","layoutBox","justifyContent","root","props","marginRight","SidenavTheme","sidenavTheme","contentWrap","verticalAlign","marginLeft","secondarySidebar","Layout1","sidenavMode","showSidenav","show","routes","AppContext","sidenavWidth","getSidenavWidth","ref","useRef","topbarTheme","layoutClasses","current","sidebarMode","perfectScrollbar","renderRoutes"],"mappings":"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","file":"static/js/36.12be7513.chunk.js","sourcesContent":["import React, { createContext, useEffect, useReducer } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'LOAD_NOTIFICATIONS': {\r\n            return {\r\n                ...state,\r\n                notifications: action.payload,\r\n            }\r\n        }\r\n        case 'DELETE_NOTIFICATION': {\r\n            return {\r\n                ...state,\r\n                notifications: action.payload,\r\n            }\r\n        }\r\n        case 'CLEAR_NOTIFICATIONS': {\r\n            return {\r\n                ...state,\r\n                notifications: action.payload,\r\n            }\r\n        }\r\n        default: {\r\n            return { ...state }\r\n        }\r\n    }\r\n}\r\n\r\nconst NotificationContext = createContext({\r\n    notifications: [],\r\n    deleteNotification: () => {},\r\n    clearNotifications: () => {},\r\n    getNotifications: () => {},\r\n    createNotification: () => {},\r\n})\r\n\r\nexport const NotificationProvider = ({ settings, children }) => {\r\n    const [state, dispatch] = useReducer(reducer, [])\r\n\r\n    const deleteNotification = async (notificationID) => {\r\n        try {\r\n            const res = await axios.post('/api/notification/delete', {\r\n                id: notificationID,\r\n            })\r\n            dispatch({\r\n                type: 'DELETE_NOTIFICATION',\r\n                payload: res.data,\r\n            })\r\n        } catch (e) {\r\n            console.error(e)\r\n        }\r\n    }\r\n\r\n    const clearNotifications = async () => {\r\n        try {\r\n            const res = await axios.post('/api/notification/delete-all')\r\n            dispatch({\r\n                type: 'CLEAR_NOTIFICATIONS',\r\n                payload: res.data,\r\n            })\r\n        } catch (e) {\r\n            console.error(e)\r\n        }\r\n    }\r\n\r\n    const getNotifications = async () => {\r\n        try {\r\n            const res = await axios.get('/api/notification')\r\n            dispatch({\r\n                type: 'LOAD_NOTIFICATIONS',\r\n                payload: res.data,\r\n            })\r\n        } catch (e) {\r\n            console.error(e)\r\n        }\r\n    }\r\n    const createNotification = async (notification) => {\r\n        try {\r\n            const res = await axios.post('/api/notification/add', {\r\n                notification,\r\n            })\r\n            dispatch({\r\n                type: 'CREATE_NOTIFICATION',\r\n                payload: res.data,\r\n            })\r\n        } catch (e) {\r\n            console.error(e)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getNotifications()\r\n    }, [])\r\n\r\n    return (\r\n        <NotificationContext.Provider\r\n            value={{\r\n                notifications: state.notifications,\r\n                deleteNotification,\r\n                clearNotifications,\r\n                getNotifications,\r\n                createNotification,\r\n            }}\r\n        >\r\n            {children}\r\n        </NotificationContext.Provider>\r\n    )\r\n}\r\n\r\nexport default NotificationContext\r\n","import { useContext } from 'react'\r\nimport NotificationContext from 'app/contexts/NotificationContext'\r\n\r\nconst useNotification = () => useContext(NotificationContext)\r\n\r\nexport default useNotification\r\n","import React, { Fragment } from 'react'\r\n\r\nimport {\r\n    Icon,\r\n    Badge,\r\n    Card,\r\n    Button,\r\n    IconButton,\r\n    Drawer,\r\n} from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\nimport { ThemeProvider } from '@material-ui/core/styles'\r\nimport { getTimeDifference } from 'utils.js'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport clsx from 'clsx'\r\nimport useSettings from 'app/hooks/useSettings'\r\nimport useNotification from 'app/hooks/useNotification'\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n    notification: {\r\n        width: 'var(--sidenav-width)',\r\n        '& .notification__topbar': {\r\n            height: 'var(--topbar-height)',\r\n        },\r\n    },\r\n    notificationCard: {\r\n        '&:hover': {\r\n            '& .delete-button': {\r\n                cursor: 'pointer',\r\n                display: 'unset',\r\n                right: 0,\r\n                marginTop: 6,\r\n                top: 0,\r\n                zIndex: 2,\r\n            },\r\n            '& .card__topbar__time': {\r\n                display: 'none',\r\n            },\r\n        },\r\n        '& .delete-button': {\r\n            display: 'none',\r\n            position: 'absolute',\r\n            right: 0,\r\n            marginTop: 9,\r\n        },\r\n        '& .card__topbar__button': {\r\n            borderRadius: 15,\r\n            opacity: 0.9,\r\n        },\r\n    },\r\n}))\r\n\r\nconst NotificationBar = ({ container }) => {\r\n    const [panelOpen, setPanelOpen] = React.useState(false)\r\n\r\n    const classes = useStyles()\r\n    const { settings } = useSettings()\r\n    const {\r\n        deleteNotification,\r\n        clearNotifications,\r\n        notifications,\r\n    } = useNotification()\r\n\r\n    const handleDrawerToggle = () => {\r\n        setPanelOpen(!panelOpen)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <IconButton onClick={handleDrawerToggle}>\r\n                <Badge color=\"secondary\" badgeContent={notifications?.length}>\r\n                    <Icon>notifications</Icon>\r\n                </Badge>\r\n            </IconButton>\r\n\r\n            <ThemeProvider theme={settings.themes[settings.activeTheme]}>\r\n                <Drawer\r\n                    width={'100px'}\r\n                    container={container}\r\n                    variant=\"temporary\"\r\n                    anchor={'right'}\r\n                    open={panelOpen}\r\n                    onClose={handleDrawerToggle}\r\n                    ModalProps={{\r\n                        keepMounted: true,\r\n                    }}\r\n                >\r\n                    <div className={classes.notification}>\r\n                        <div className=\"notification__topbar elevation-z6 flex items-center p-4 mb-4\">\r\n                            <Icon color=\"primary\">notifications</Icon>\r\n                            <h5 className=\"ml-2 my-0 font-medium\">\r\n                                Notifications\r\n                            </h5>\r\n                        </div>\r\n\r\n                        {notifications?.map((notification) => (\r\n                            <div\r\n                                key={notification.id}\r\n                                className={clsx(\r\n                                    'relative',\r\n                                    classes.notificationCard\r\n                                )}\r\n                            >\r\n                                <IconButton\r\n                                    size=\"small\"\r\n                                    className=\"delete-button bg-light-gray mr-6\"\r\n                                    onClick={() =>\r\n                                        deleteNotification(notification.id)\r\n                                    }\r\n                                >\r\n                                    <Icon\r\n                                        className=\"text-muted\"\r\n                                        fontSize=\"small\"\r\n                                    >\r\n                                        clear\r\n                                    </Icon>\r\n                                </IconButton>\r\n                                <Link\r\n                                    to={`/${notification.path}`}\r\n                                    onClick={handleDrawerToggle}\r\n                                >\r\n                                    <Card className=\"mx-4 mb-6\" elevation={3}>\r\n                                        <div className=\"card__topbar flex items-center justify-between p-2 bg-light-gray\">\r\n                                            <div className=\"flex items-center\">\r\n                                                <div className=\"card__topbar__button flex items-center justify-between h-24 w-24 overflow-hidden\">\r\n                                                    <Icon\r\n                                                        className=\"card__topbar__icon\"\r\n                                                        fontSize=\"small\"\r\n                                                        color={\r\n                                                            notification.icon\r\n                                                                .color\r\n                                                        }\r\n                                                    >\r\n                                                        {notification.icon.name}\r\n                                                    </Icon>\r\n                                                </div>\r\n                                                <span className=\"ml-4 font-medium text-muted\">\r\n                                                    {notification.heading}\r\n                                                </span>\r\n                                            </div>\r\n                                            <small className=\"card__topbar__time text-muted\">\r\n                                                {getTimeDifference(\r\n                                                    new Date(\r\n                                                        notification.timestamp\r\n                                                    )\r\n                                                )}{' '}\r\n                                                ago\r\n                                            </small>\r\n                                        </div>\r\n                                        <div className=\"px-4 pt-2 pb-4\">\r\n                                            <p className=\"m-0\">\r\n                                                {notification.title}\r\n                                            </p>\r\n                                            <small className=\"text-muted\">\r\n                                                {notification.subtitle}\r\n                                            </small>\r\n                                        </div>\r\n                                    </Card>\r\n                                </Link>\r\n                            </div>\r\n                        ))}\r\n                        {!!notifications?.length && (\r\n                            <div className=\"text-center\">\r\n                                <Button onClick={clearNotifications}>\r\n                                    Clear Notifications\r\n                                </Button>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </Drawer>\r\n            </ThemeProvider>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NotificationBar\r\n","import React, { Fragment, useState } from 'react'\r\nimport { Icon, Badge, IconButton, Drawer, Button } from '@material-ui/core'\r\nimport { ThemeProvider } from '@material-ui/core/styles'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n    getCartList,\r\n    deleteProductFromCart,\r\n    updateCartAmount,\r\n} from 'app/redux/actions/EcommerceActions'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport clsx from 'clsx'\r\nimport { useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport useSettings from 'app/hooks/useSettings'\r\nimport useAuth from 'app/hooks/useAuth'\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n    miniCart: {\r\n        width: 'var(--sidenav-width)',\r\n        '& .cart__topbar': {\r\n            height: 'var(--topbar-height)',\r\n        },\r\n        '& .mini-cart__item': {\r\n            transition: 'background 300ms ease',\r\n            '&:hover': {\r\n                background: 'rgba(0,0,0,0.01)',\r\n            },\r\n        },\r\n    },\r\n}))\r\n\r\nlet cartListLoaded = false\r\n\r\nfunction ShoppingCart({ container }) {\r\n    const [totalCost, setTotalCost] = useState(0)\r\n    const [panelOpen, setPanelOpen] = useState(false)\r\n\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const { user } = useAuth()\r\n    const { cartList } = useSelector((state) => state.ecommerce)\r\n    const { settings } = useSettings()\r\n\r\n    if (!cartListLoaded) {\r\n        dispatch(getCartList(user.id))\r\n        cartListLoaded = true\r\n    }\r\n\r\n    const handleDrawerToggle = () => {\r\n        setPanelOpen(!panelOpen)\r\n    }\r\n\r\n    const handleCheckoutClick = () => {\r\n        if (totalCost > 0) {\r\n            history.push('/ecommerce/checkout')\r\n            setPanelOpen(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let total = 0\r\n\r\n        cartList.forEach((product) => {\r\n            total += product.price * product.amount\r\n        })\r\n\r\n        setTotalCost(total)\r\n    }, [cartList])\r\n\r\n    return (\r\n        <Fragment>\r\n            <IconButton onClick={handleDrawerToggle}>\r\n                <Badge color=\"secondary\" badgeContent={cartList.length}>\r\n                    <Icon>shopping_cart</Icon>\r\n                </Badge>\r\n            </IconButton>\r\n\r\n            <ThemeProvider theme={settings.themes[settings.activeTheme]}>\r\n                <Drawer\r\n                    container={container}\r\n                    variant=\"temporary\"\r\n                    anchor={'right'}\r\n                    open={panelOpen}\r\n                    onClose={handleDrawerToggle}\r\n                    ModalProps={{\r\n                        keepMounted: true,\r\n                    }}\r\n                >\r\n                    <div\r\n                        className={clsx('flex-column h-full', classes.miniCart)}\r\n                    >\r\n                        <div className=\"cart__topbar elevation-z6 flex items-center p-1 mb-2 pl-4\">\r\n                            <Icon color=\"primary\">shopping_cart</Icon>\r\n                            <h5 className=\"ml-2 my-0 font-medium\">Cart</h5>\r\n                        </div>\r\n\r\n                        <div className=\"flex-grow overflow-auto\">\r\n                            {cartList.map((product) => (\r\n                                <div\r\n                                    key={product.id}\r\n                                    className=\"mini-cart__item flex items-center py-2 px-2\"\r\n                                >\r\n                                    <div className=\"flex flex-column mr-1\">\r\n                                        <IconButton\r\n                                            size=\"small\"\r\n                                            onClick={() =>\r\n                                                dispatch(\r\n                                                    updateCartAmount(\r\n                                                        user.id,\r\n                                                        product.id,\r\n                                                        product.amount + 1\r\n                                                    )\r\n                                                )\r\n                                            }\r\n                                        >\r\n                                            <Icon className=\"cursor-pointer\">\r\n                                                keyboard_arrow_up\r\n                                            </Icon>\r\n                                        </IconButton>\r\n                                        <IconButton\r\n                                            disabled={!(product.amount - 1)}\r\n                                            size=\"small\"\r\n                                            onClick={() =>\r\n                                                dispatch(\r\n                                                    updateCartAmount(\r\n                                                        user.id,\r\n                                                        product.id,\r\n                                                        product.amount - 1\r\n                                                    )\r\n                                                )\r\n                                            }\r\n                                        >\r\n                                            <Icon className=\"cursor-pointer\">\r\n                                                keyboard_arrow_down\r\n                                            </Icon>\r\n                                        </IconButton>\r\n                                    </div>\r\n                                    <div className=\"mr-2\">\r\n                                        <img\r\n                                            className=\"w-48\"\r\n                                            src={product.imgUrl}\r\n                                            alt={product.title}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"mr-2 text-center flex-grow flex-column\">\r\n                                        <h6 className=\"m-0 mb-1 ellipsis w-120\">\r\n                                            {product.title}\r\n                                        </h6>\r\n                                        <small className=\"text-muted\">\r\n                                            ${product.price} x {product.amount}\r\n                                        </small>\r\n                                    </div>\r\n                                    <IconButton\r\n                                        size=\"small\"\r\n                                        onClick={() =>\r\n                                            dispatch(\r\n                                                deleteProductFromCart(\r\n                                                    user.userId,\r\n                                                    product.id\r\n                                                )\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <Icon fontSize=\"small\">clear</Icon>\r\n                                    </IconButton>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n\r\n                        <Button\r\n                            className=\"w-full border-radius-0\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={handleCheckoutClick}\r\n                        >\r\n                            Checkout (${totalCost.toFixed(2)})\r\n                        </Button>\r\n                    </div>\r\n                </Drawer>\r\n            </ThemeProvider>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ShoppingCart\r\n","import React from 'react'\r\nimport {\r\n    Icon,\r\n    IconButton,\r\n    MenuItem,\r\n    Avatar,\r\n    useMediaQuery,\r\n    Hidden,\r\n} from '@material-ui/core'\r\nimport { MatxMenu, MatxSearchBox } from 'app/components'\r\nimport NotificationBar from '../../NotificationBar/NotificationBar'\r\nimport { Link } from 'react-router-dom'\r\nimport ShoppingCart from '../../ShoppingCart/ShoppingCart'\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\r\nimport clsx from 'clsx'\r\nimport useAuth from 'app/hooks/useAuth'\r\nimport useSettings from 'app/hooks/useSettings'\r\nimport { NotificationProvider } from 'app/contexts/NotificationContext'\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n    topbar: {\r\n        top: 0,\r\n        zIndex: 96,\r\n        transition: 'all 0.3s ease',\r\n        background:\r\n            'linear-gradient(180deg, rgba(255, 255, 255, 0.95) 44%, rgba(247, 247, 247, 0.4) 50%, rgba(255, 255, 255, 0))',\r\n\r\n        '& .topbar-hold': {\r\n            backgroundColor: palette.primary.main,\r\n            height: 80,\r\n            paddingLeft: 18,\r\n            paddingRight: 20,\r\n            [theme.breakpoints.down('sm')]: {\r\n                paddingLeft: 16,\r\n                paddingRight: 16,\r\n            },\r\n            [theme.breakpoints.down('xs')]: {\r\n                paddingLeft: 14,\r\n                paddingRight: 16,\r\n            },\r\n        },\r\n        '& .fixed': {\r\n            boxShadow: theme.shadows[8],\r\n            height: 64,\r\n        },\r\n    },\r\n    userMenu: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        cursor: 'pointer',\r\n        borderRadius: 24,\r\n        padding: 4,\r\n        '& span': {\r\n            margin: '0 8px',\r\n            // color: palette.text.secondary\r\n        },\r\n    },\r\n    menuItem: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        minWidth: 185,\r\n    },\r\n}))\r\n\r\nconst Layout1Topbar = () => {\r\n    const theme = useTheme()\r\n    const classes = useStyles()\r\n    const { settings, updateSettings } = useSettings()\r\n    const { logout, user } = useAuth()\r\n    const isMdScreen = useMediaQuery(theme.breakpoints.down('md'))\r\n    const fixed = settings?.layout1Settings?.topbar?.fixed\r\n\r\n    const updateSidebarMode = (sidebarSettings) => {\r\n        updateSettings({\r\n            layout1Settings: {\r\n                leftSidebar: {\r\n                    ...sidebarSettings,\r\n                },\r\n            },\r\n        })\r\n    }\r\n\r\n    const handleSidebarToggle = () => {\r\n        let { layout1Settings } = settings\r\n        let mode\r\n\r\n        if (isMdScreen) {\r\n            mode =\r\n                layout1Settings.leftSidebar.mode === 'close'\r\n                    ? 'mobile'\r\n                    : 'close'\r\n        } else {\r\n            mode =\r\n                layout1Settings.leftSidebar.mode === 'full' ? 'close' : 'full'\r\n        }\r\n\r\n        updateSidebarMode({ mode })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.topbar}>\r\n            <div className={clsx({ 'topbar-hold': true, fixed: fixed })}>\r\n                <div className=\"flex justify-between items-center h-full\">\r\n                    <div className=\"flex\">\r\n                        <IconButton\r\n                            onClick={handleSidebarToggle}\r\n                            className=\"hide-on-pc\"\r\n                        >\r\n                            <Icon>menu</Icon>\r\n                        </IconButton>\r\n\r\n                        <div className=\"hide-on-mobile\">\r\n                            <IconButton>\r\n                                <Icon>mail_outline</Icon>\r\n                            </IconButton>\r\n\r\n                            <IconButton>\r\n                                <Icon>web_asset</Icon>\r\n                            </IconButton>\r\n\r\n                            <IconButton>\r\n                                <Icon>star_outline</Icon>\r\n                            </IconButton>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex items-center\">\r\n                        <MatxSearchBox />\r\n                        <NotificationProvider>\r\n                            <NotificationBar />\r\n                        </NotificationProvider>\r\n\r\n                        {/* <NotificationBar2 /> */}\r\n\r\n                        <ShoppingCart />\r\n\r\n                        <MatxMenu\r\n                            menuButton={\r\n                                <div className={classes.userMenu}>\r\n                                    <Hidden xsDown>\r\n                                        <span>\r\n                                            Hi <strong>{user.name}</strong>\r\n                                        </span>\r\n                                    </Hidden>\r\n                                    <Avatar\r\n                                        className=\"cursor-pointer\"\r\n                                        src={user.avatar}\r\n                                    />\r\n                                </div>\r\n                            }\r\n                        >\r\n                            <MenuItem>\r\n                                <Link className={classes.menuItem} to=\"/\">\r\n                                    <Icon> home </Icon>\r\n                                    <span className=\"pl-4\"> Home </span>\r\n                                </Link>\r\n                            </MenuItem>\r\n                            <MenuItem>\r\n                                <Link\r\n                                    className={classes.menuItem}\r\n                                    to=\"/page-layouts/user-profile\"\r\n                                >\r\n                                    <Icon> person </Icon>\r\n                                    <span className=\"pl-4\"> Profile </span>\r\n                                </Link>\r\n                            </MenuItem>\r\n                            <MenuItem className={classes.menuItem}>\r\n                                <Icon> settings </Icon>\r\n                                <span className=\"pl-4\"> Settings </span>\r\n                            </MenuItem>\r\n                            <MenuItem\r\n                                onClick={logout}\r\n                                className={classes.menuItem}\r\n                            >\r\n                                <Icon> power_settings_new </Icon>\r\n                                <span className=\"pl-4\"> Logout </span>\r\n                            </MenuItem>\r\n                        </MatxMenu>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Layout1Topbar)\r\n","import React, { Fragment } from 'react'\r\nimport Scrollbar from 'react-perfect-scrollbar'\r\nimport { navigations } from 'app/navigations'\r\nimport { MatxVerticalNav } from 'app/components'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport clsx from 'clsx'\r\nimport useSettings from 'app/hooks/useSettings'\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n    scrollable: {\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n    },\r\n    sidenavMobileOverlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        width: '100vw',\r\n        background: 'rgba(0, 0, 0, 0.54)',\r\n        zIndex: -1,\r\n        [theme.breakpoints.up('lg')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n}))\r\n\r\nconst Sidenav = ({ children }) => {\r\n    const classes = useStyles()\r\n    const { settings, updateSettings } = useSettings()\r\n\r\n    const updateSidebarMode = (sidebarSettings) => {\r\n        let activeLayoutSettingsName = settings.activeLayout + 'Settings'\r\n        let activeLayoutSettings = settings[activeLayoutSettingsName]\r\n\r\n        updateSettings({\r\n            ...settings,\r\n            [activeLayoutSettingsName]: {\r\n                ...activeLayoutSettings,\r\n                leftSidebar: {\r\n                    ...activeLayoutSettings.leftSidebar,\r\n                    ...sidebarSettings,\r\n                },\r\n            },\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Scrollbar\r\n                options={{ suppressScrollX: true }}\r\n                className={clsx('relative px-4', classes.scrollable)}\r\n            >\r\n                {children}\r\n                <MatxVerticalNav items={navigations} />\r\n            </Scrollbar>\r\n\r\n            <div\r\n                onClick={() => updateSidebarMode({ mode: 'close' })}\r\n                className={classes.sidenavMobileOverlay}\r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Sidenav\r\n","import React from 'react'\r\nimport { MatxLogo } from 'app/components'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport clsx from 'clsx'\r\nimport useSettings from 'app/hooks/useSettings'\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n    brand: {\r\n        padding: '20px 18px 20px 29px',\r\n    },\r\n    hideOnCompact: {\r\n        display: 'none',\r\n    },\r\n}))\r\n\r\nconst Brand = ({ children }) => {\r\n    const classes = useStyles()\r\n    const { settings } = useSettings()\r\n    const leftSidebar = settings.layout1Settings.leftSidebar\r\n    const { mode } = leftSidebar\r\n\r\n    return (\r\n        <div\r\n            className={clsx('flex items-center justify-between', classes.brand)}\r\n        >\r\n            <div className=\"flex items-center\">\r\n                <MatxLogo />\r\n                <span\r\n                    className={clsx({\r\n                        'text-18 ml-2 font-medium sidenavHoverShow': true,\r\n                        [classes.hideOnCompact]: mode === 'compact',\r\n                    })}\r\n                >\r\n                    Matx\r\n                </span>\r\n            </div>\r\n            <div\r\n                className={clsx({\r\n                    sidenavHoverShow: true,\r\n                    [classes.hideOnCompact]: mode === 'compact',\r\n                })}\r\n            >\r\n                {children || null}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Brand\r\n","export default __webpack_public_path__ + \"static/media/vert.ff21c64f.jpg\";","import React from 'react'\r\nimport { useTheme, makeStyles } from '@material-ui/core/styles'\r\n\r\nimport Sidenav from '../../Sidenav/Sidenav'\r\nimport Brand from '../../Brand/Brand'\r\nimport { Switch, Hidden } from '@material-ui/core'\r\nimport { convertHexToRGB } from 'utils'\r\nimport useSettings from 'app/hooks/useSettings'\r\nimport img from './vert.jpg'\r\nconst r={backgroundImage: ` url('../../../../cloth/vert.jpg')`,\r\nbackgroundSize: '100% auto',\r\n}\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n    sidenav: ({ width, primaryRGB, bgImgURL }) => ({\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        height: '100vh',\r\n        width: width,\r\n        boxShadow: theme.shadows[8],\r\n        backgroundPosition: 'top',\r\n        backgroundSize: '100% auto',\r\n        \r\n        zIndex: 111,\r\n        overflow: 'hidden',\r\n        color: palette.text.primary,\r\n        transition: 'all 250ms ease-in-out',\r\n        backgroundImage: `linear-gradient(to bottom, rgba(${primaryRGB}, 0.96), rgba(${primaryRGB}, 0.16)), url(${img})`,\r\n        '&:hover': {\r\n            width: 'var(--sidenav-width)',\r\n            '& .sidenavHoverShow': {\r\n                display: 'block',\r\n            },\r\n            '& .compactNavItem': {\r\n                width: '100%',\r\n                maxWidth: '100%',\r\n                '& .nav-bullet': {\r\n                    display: 'block',\r\n                },\r\n                '& .nav-bullet-text': {\r\n                    display: 'none',\r\n                },\r\n            },\r\n        },\r\n    }),\r\n    hideOnCompact: {\r\n        display: 'none',\r\n    },\r\n    userInfo: {},\r\n}))\r\n\r\nconst Layout1Sidenav = () => {\r\n    const theme = useTheme()\r\n\r\n    const { settings, updateSettings } = useSettings()\r\n\r\n    const leftSidebar = settings.layout1Settings.leftSidebar\r\n    const { mode } = leftSidebar\r\n\r\n    const getSidenavWidth = () => {\r\n        switch (mode) {\r\n            case 'compact':\r\n                return 'var(--sidenav-compact-width)'\r\n            default:\r\n                return 'var(--sidenav-width)'\r\n        }\r\n    }\r\n\r\n    const primaryRGB = convertHexToRGB(theme.palette.primary.main)\r\n    const classes = useStyles({\r\n        ...leftSidebar,\r\n        width: getSidenavWidth(),\r\n        primaryRGB,\r\n    })\r\n\r\n    const updateSidebarMode = (sidebarSettings) => {\r\n        updateSettings({\r\n            layout1Settings: {\r\n                leftSidebar: {\r\n                    ...sidebarSettings,\r\n                },\r\n            },\r\n        })\r\n    }\r\n\r\n    const handleSidenavToggle = () => {\r\n        updateSidebarMode({ mode: mode === 'compact' ? 'full' : 'compact' })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.sidenav} style={{r}}>\r\n            <div className=\"flex-column relative h-full\">\r\n                <Brand>\r\n                    <Hidden smDown>\r\n                        <Switch\r\n                            onChange={handleSidenavToggle}\r\n                            checked={leftSidebar.mode !== 'full'}\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                        />\r\n                    </Hidden>\r\n                </Brand>\r\n                <Sidenav />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Layout1Sidenav)\r\n","import React from 'react'\r\nimport { ThemeProvider, makeStyles, useTheme } from '@material-ui/core/styles'\r\nimport { Button, Toolbar, AppBar } from '@material-ui/core'\r\nimport clsx from 'clsx'\r\nimport useSettings from 'app/hooks/useSettings'\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n    footer: {\r\n        minHeight: 'var(--topbar-height)',\r\n        '@media (max-width: 499px)': {\r\n            display: 'table',\r\n            width: '100%',\r\n            minHeight: 'auto',\r\n            padding: '1rem 0',\r\n            '& .container': {\r\n                flexDirection: 'column !important',\r\n                '& a': {\r\n                    margin: '0 0 16px !important',\r\n                },\r\n            },\r\n        },\r\n    },\r\n    appbar: {\r\n        zIndex: 96,\r\n    },\r\n}))\r\n\r\nconst Footer = () => {\r\n    const classes = useStyles()\r\n    const theme = useTheme()\r\n    const { settings } = useSettings()\r\n\r\n    const footerTheme = settings.themes[settings.footer.theme] || theme\r\n\r\n    return (\r\n        <ThemeProvider theme={footerTheme}>\r\n            <AppBar\r\n                color=\"primary\"\r\n                position=\"static\"\r\n                className={classes.appbar}\r\n            >\r\n                <Toolbar className={clsx('flex items-center', classes.footer)}>\r\n                    <div className=\"flex items-center container w-full\">\r\n                        {/* <a\r\n              href=\"https://github.com/uilibrary/matx-react\"\r\n              target=\"_blank\"\r\n              className=\"mr-2\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <Button variant=\"contained\">Download Free version</Button>\r\n            </a> */}\r\n                        \r\n                        <span className=\"m-auto\"></span>\r\n                        <p className=\"m-0\">\r\n                            Design and Developed by{' '}\r\n                            <a href=\"https://www.linkedin.com/in/ta9i/\">Takieddine</a>\r\n                        </p>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React from 'react'\r\nimport { Fab, IconButton, Icon } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport clsx from 'clsx'\r\nimport useSettings from 'app/hooks/useSettings'\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n    toggle: {\r\n        position: 'fixed',\r\n        right: '30px',\r\n        bottom: '50px',\r\n        zIndex: 99,\r\n        transition: 'all 0.15s ease',\r\n        '&.open': {\r\n            right: '10px',\r\n        },\r\n    },\r\n}))\r\n\r\nconst SecondarySidebarToggle = () => {\r\n    // const isMobile = useMediaQuery(\"(max-width:767px)\");\r\n    const classes = useStyles()\r\n    const { settings, updateSettings } = useSettings()\r\n\r\n    const toggle = () => {\r\n        updateSettings({\r\n            secondarySidebar: { open: !settings.secondarySidebar.open },\r\n        })\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //   updateSettings({\r\n    //     secondarySidebar: { open: !isMobile },\r\n    //   });\r\n    // }, [isMobile]);\r\n\r\n    return (\r\n        <div\r\n            className={clsx({\r\n                [classes.toggle]: true,\r\n                open: settings.secondarySidebar.open,\r\n            })}\r\n        >\r\n            {settings.secondarySidebar.open && (\r\n                <IconButton onClick={toggle} size=\"small\" aria-label=\"toggle\">\r\n                    <Icon>close</Icon>\r\n                </IconButton>\r\n            )}\r\n            {!settings.secondarySidebar.open && (\r\n                <Fab\r\n                    // variant=\"extended\"\r\n                    // size=\"small\"\r\n                    color=\"primary\"\r\n                    aria-label=\"expand\"\r\n                    className=\"\"\r\n                    onClick={toggle}\r\n                >\r\n                    <Icon>settings</Icon>\r\n                </Fab>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SecondarySidebarToggle\r\n","import { Badge } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/core/styles'\r\n\r\nconst BadgeSelected = withStyles((theme) => ({\r\n    badge: {\r\n        top: '0',\r\n        right: '0',\r\n        height: '32px',\r\n        width: '32px',\r\n        borderRadius: '50%',\r\n    },\r\n}))(Badge)\r\n\r\nexport default BadgeSelected\r\n","import React, { Fragment, useState } from 'react'\r\nimport {\r\n    Icon,\r\n    IconButton,\r\n    Button,\r\n    // FormGroup,\r\n    // Switch,\r\n    // FormControlLabel,\r\n    // FormControl,\r\n    // FormLabel,\r\n    Card,\r\n    Tooltip,\r\n    Drawer,\r\n    Link,\r\n} from '@material-ui/core'\r\nimport Scrollbar from 'react-perfect-scrollbar'\r\n// import Layout1Customizer from \"./Layout1Customizer\";\r\n// import Layout2Customizer from \"./Layout2Customizer\";\r\n// import { themeColors } from \"../../MatxTheme/themeColors\";\r\nimport BadgeSelected from './BadgeSelected'\r\n// import { mainThemes, topbarThemes } from \"./customizerOptions\";\r\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles'\r\nimport clsx from 'clsx'\r\n\r\nimport useSettings from 'app/hooks/useSettings'\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n    label: {\r\n        color: palette.secondary.main,\r\n        backgroundColor: palette.primary.dark,\r\n        fontWeight: 700,\r\n        transform: 'rotate(90deg)',\r\n        marginBottom: '2.5rem',\r\n        padding: '.25rem .5rem',\r\n        borderRadius: '4px',\r\n        cursor: 'pointer',\r\n        letterSpacing: '1.5px',\r\n        fontSize: '1rem',\r\n        '&:hover, &.open': {\r\n            backgroundColor: palette.secondary.main,\r\n            color: palette.secondary.contrastText,\r\n        },\r\n    },\r\n    helpText: {\r\n        margin: '0px .5rem 1rem',\r\n    },\r\n    maxCustomizer: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        right: 0,\r\n        zIndex: 50,\r\n    },\r\n    customizerCloseButton: {\r\n        position: 'absolute',\r\n        right: 8,\r\n        top: 8,\r\n    },\r\n    layoutBox: {\r\n        '&:hover': {\r\n            '& .layout-name': {\r\n                position: 'absolute',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                height: '100%',\r\n                width: '100%',\r\n                background: 'rgba(0,0,0,0.3)',\r\n                zIndex: 12,\r\n            },\r\n        },\r\n    },\r\n}))\r\n\r\nconst MatxCustomizer = (props) => {\r\n    const [open, setOpen] = useState(false)\r\n    const [tabIndex, setTabIndex] = useState(0)\r\n\r\n    const classes = useStyles()\r\n    const { settings, updateSettings } = useSettings()\r\n\r\n    // const handleChange = (name, value) => {\r\n    //   let updatedSettings = set(settings, name, value);\r\n\r\n    //   updateSettings(updatedSettings);\r\n    // };\r\n\r\n    // const handleControlChange = (name) => (event) => {\r\n    //   let controlValue =\r\n    //     event.target.type === \"checkbox\"\r\n    //       ? event.target.checked\r\n    //       : event.target.value;\r\n    //   handleChange(name, controlValue);\r\n    // };\r\n\r\n    const tooglePanel = () => {\r\n        setOpen(!open)\r\n    }\r\n    const handleTabChange = (index) => {\r\n        setTabIndex(index)\r\n    }\r\n\r\n    let activeTheme = { ...settings.themes[settings.activeTheme] }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Tooltip title=\"Theme Settings\" placement=\"left\">\r\n                <span\r\n                    className={clsx({ [classes.label]: true, open })}\r\n                    onClick={tooglePanel}\r\n                >\r\n                    DEMOS\r\n                </span>\r\n            </Tooltip>\r\n\r\n            {/* {open && ( */}\r\n            <ThemeProvider theme={activeTheme}>\r\n                <Drawer\r\n                    anchor={'right'}\r\n                    open={open}\r\n                    variant=\"temporary\"\r\n                    onClose={tooglePanel}\r\n                    ModalProps={{\r\n                        keepMounted: true,\r\n                    }}\r\n                >\r\n                    <div\r\n                        className={clsx(\r\n                            'flex-column w-320 pb-8 elevation-z12 h-full-screen bg-default',\r\n                            classes.maxCustomizer\r\n                        )}\r\n                    >\r\n                        <div className=\"flex items-center px-5 py-4 mb-4 min-h-64 elevation-z6\">\r\n                            <Icon color=\"primary\">settings</Icon>\r\n                            <h5 className=\"mb-0 ml-2\">Theme Settings</h5>\r\n                            <IconButton\r\n                                onClick={tooglePanel}\r\n                                className={classes.customizerCloseButton}\r\n                            >\r\n                                <Icon>close</Icon>\r\n                            </IconButton>\r\n                        </div>\r\n                        <div className=\"px-6 mb-4 flex\">\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                color={tabIndex === 0 ? 'secondary' : 'primary'}\r\n                                onClick={() => handleTabChange(0)}\r\n                                className=\"mr-4\"\r\n                            >\r\n                                Demos\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                color={tabIndex === 1 ? 'secondary' : 'primary'}\r\n                                onClick={() => handleTabChange(1)}\r\n                            >\r\n                                Settings\r\n                            </Button>\r\n                        </div>\r\n\r\n                        <Scrollbar\r\n                            options={{ suppressScrollX: true }}\r\n                            className=\"px-4\"\r\n                        >\r\n                            {tabIndex === 0 && (\r\n                                <div className=\"mb-8 mx-2\">\r\n                                    <div className=\"text-muted\">Layouts</div>\r\n\r\n                                    <div className=\"flex-column\">\r\n                                        {demoLayouts.map((layout) => (\r\n                                            <BadgeSelected\r\n                                                color=\"secondary\"\r\n                                                className={clsx(\r\n                                                    'w-full my-3 max-h-152 cursor-pointer',\r\n                                                    classes.layoutBox\r\n                                                )}\r\n                                                badgeContent={'Pro'}\r\n                                                invisible={!layout.isPro}\r\n                                                key={layout.name}\r\n                                            >\r\n                                                <Card\r\n                                                    className=\"relative\"\r\n                                                    onClick={() =>\r\n                                                        updateSettings(\r\n                                                            layout.options\r\n                                                        )\r\n                                                    }\r\n                                                    elevation={4}\r\n                                                >\r\n                                                    <div className=\"layout-name hidden\">\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"secondary\"\r\n                                                        >\r\n                                                            {layout.name}\r\n                                                        </Button>\r\n                                                    </div>\r\n\r\n                                                    <img\r\n                                                        className=\"w-full\"\r\n                                                        src={layout.thumbnail}\r\n                                                        alt={layout.name}\r\n                                                    />\r\n                                                </Card>\r\n                                            </BadgeSelected>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n\r\n                            {/* END LAYOUT */}\r\n\r\n                            {tabIndex === 1 && (\r\n                                <div>\r\n                                    <div className={classes.helpText}>\r\n                                        We used React context API to control\r\n                                        layout. Check out the{' '}\r\n                                        <Link\r\n                                            href=\"http://demos.ui-lib.com/matx-react-doc/layout.html\"\r\n                                            target=\"_blank\"\r\n                                        >\r\n                                            Documentation\r\n                                        </Link>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                            )}\r\n                        </Scrollbar>\r\n                    </div>\r\n                </Drawer>\r\n            </ThemeProvider>\r\n            {/* )} */}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst demoLayouts = [\r\n    {\r\n        name: 'Light Sidebar',\r\n        thumbnail: '/assets/images/screenshots/layout1-customizer.png',\r\n        isPro: false,\r\n        options: {\r\n            activeLayout: 'layout1',\r\n            activeTheme: 'blue',\r\n            layout1Settings: {\r\n                leftSidebar: {\r\n                    mode: 'full',\r\n                    theme: 'whiteBlue',\r\n                    bgOpacity: 0.98,\r\n                },\r\n                topbar: {\r\n                    theme: 'blueDark',\r\n                    fixed: true,\r\n                },\r\n            },\r\n            footer: {\r\n                theme: 'slateDark1',\r\n            },\r\n        },\r\n    },\r\n    {\r\n        name: 'Compact Sidebar',\r\n        thumbnail: '/assets/images/screenshots/layout5-customizer.png',\r\n        isPro: false,\r\n        options: {\r\n            activeLayout: 'layout1',\r\n            activeTheme: 'blue',\r\n            layout1Settings: {\r\n                leftSidebar: {\r\n                    mode: 'compact',\r\n                    theme: 'slateDark1',\r\n                    bgOpacity: 0.92,\r\n                },\r\n                topbar: {\r\n                    theme: 'whiteBlue',\r\n                    fixed: true,\r\n                },\r\n            },\r\n        },\r\n    },\r\n    {\r\n        name: 'Dark Sidebar',\r\n        thumbnail: '/assets/images/screenshots/layout1-blue-customizer.png',\r\n        isPro: false,\r\n        options: {\r\n            activeLayout: 'layout1',\r\n            activeTheme: 'blue',\r\n            layout1Settings: {\r\n                leftSidebar: {\r\n                    mode: 'full',\r\n                    theme: 'slateDark1',\r\n                    bgOpacity: 0.92,\r\n                },\r\n                topbar: {\r\n                    theme: 'blueDark',\r\n                    fixed: true,\r\n                },\r\n            },\r\n        },\r\n    },\r\n    {\r\n        name: 'Dark Theme',\r\n        thumbnail: '/assets/images/screenshots/layout3-customizer.png',\r\n        isPro: true,\r\n        options: {\r\n            activeLayout: 'layout2',\r\n            activeTheme: 'blue',\r\n            layout1Settings: {\r\n                leftSidebar: {\r\n                    mode: 'full',\r\n                    theme: 'slateDark1',\r\n                    bgOpacity: 0.92,\r\n                },\r\n                topbar: {\r\n                    theme: 'purpleDark1',\r\n                    fixed: true,\r\n                },\r\n            },\r\n            footer: {\r\n                theme: 'slateDark1',\r\n            },\r\n        },\r\n    },\r\n    {\r\n        name: 'Horizontal Navigation',\r\n        thumbnail: '/assets/images/screenshots/layout4-customizer.png',\r\n        isPro: true,\r\n        options: {\r\n            activeLayout: 'layout2',\r\n            activeTheme: 'purple1',\r\n            layout2Settings: {\r\n                mode: 'full',\r\n            },\r\n            footer: {\r\n                theme: 'slateDark1',\r\n            },\r\n        },\r\n    },\r\n]\r\n\r\nexport default MatxCustomizer\r\n","import React from 'react'\r\nimport { IconButton, Icon } from '@material-ui/core'\r\nimport MatxCustomizer from '../MatxCustomizer/MatxCustomizer'\r\nimport ShoppingCart from '../ShoppingCart/ShoppingCart'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport clsx from 'clsx'\r\nimport { ChatHead } from 'app/components'\r\nimport { Chatbox } from 'app/components'\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n    root: {\r\n        position: 'fixed',\r\n        height: '100vh',\r\n        width: (props) => props.width,\r\n        right: 0,\r\n        bottom: 0,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        boxShadow: theme.shadows[8],\r\n        backgroundColor: palette.primary.main,\r\n        zIndex: 98,\r\n        transition: 'all 0.15s ease',\r\n    },\r\n    '@global': {\r\n        '@media screen and (min-width: 767px)': {\r\n            '.content-wrap, .layout2.layout-contained, .layout2.layout-full': {\r\n                marginRight: (props) => props.width,\r\n            },\r\n            '.matx-customizer': {\r\n                right: (props) => props.width,\r\n            },\r\n        },\r\n        '@media screen and (max-width: 959px)': {\r\n            '.toolbar-menu-wrap .menu-area': {\r\n                width: (props) => `calc(100% - ${props.width})`,\r\n            },\r\n        },\r\n    },\r\n}))\r\n\r\nconst SecondarySidebarContent = () => {\r\n    const classes = useStyles({ width: '50px' })\r\n\r\n    return (\r\n        <div className={clsx('secondary-sidebar', classes.root)}>\r\n            <span className=\"m-auto\"></span>\r\n\r\n            <MatxCustomizer />\r\n\r\n            <ShoppingCart />\r\n\r\n            <ChatHead\r\n                icon={\r\n                    <IconButton className=\"my-3\" size=\"small\">\r\n                        <Icon>comments</Icon>\r\n                    </IconButton>\r\n                }\r\n            >\r\n                <Chatbox />\r\n            </ChatHead>\r\n\r\n            <span className=\"m-auto\"></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SecondarySidebarContent\r\n","import React from 'react'\r\nimport { ThemeProvider } from '@material-ui/core/styles'\r\nimport { useTheme } from '@material-ui/core/styles'\r\nimport useSettings from 'app/hooks/useSettings'\r\n\r\nconst SidenavTheme = ({ children }) => {\r\n    const theme = useTheme()\r\n    const { settings } = useSettings()\r\n    const sidenavTheme =\r\n        settings.themes[settings.layout1Settings.leftSidebar.theme] || theme\r\n\r\n    return <ThemeProvider theme={sidenavTheme}>{children}</ThemeProvider>\r\n}\r\n\r\nexport default SidenavTheme\r\n","import React, { useContext, useEffect, useRef } from 'react'\r\nimport { ThemeProvider } from '@material-ui/core/styles'\r\nimport { useMediaQuery } from '@material-ui/core'\r\nimport Scrollbar from 'react-perfect-scrollbar'\r\nimport { renderRoutes } from 'react-router-config'\r\nimport Layout1Topbar from './Layout1Topbar'\r\nimport Layout1Sidenav from './Layout1Sidenav'\r\nimport Footer from '../../Footer/Footer'\r\nimport SecondarySidebar from '../../SecondarySidebar/SecondarySidebar'\r\nimport AppContext from 'app/contexts/AppContext'\r\nimport { MatxSuspense } from 'app/components'\r\nimport { useTheme } from '@material-ui/core/styles'\r\nimport clsx from 'clsx'\r\nimport SidenavTheme from '../../MatxTheme/SidenavTheme/SidenavTheme'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport useSettings from 'app/hooks/useSettings'\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n    contentWrap: ({ width, secondarySidebar }) => {\r\n        return {\r\n            verticalAlign: 'top',\r\n            marginLeft: width,\r\n            transition: 'all 0.3s ease',\r\n            // [theme.breakpoints.up(\"sm\")]: {\r\n            marginRight: secondarySidebar.open ? 50 : 0,\r\n            // },\r\n        }\r\n    },\r\n    topbar: {\r\n        top: 0,\r\n        zIndex: 96,\r\n        background:\r\n            'linear-gradient(180deg, rgba(255, 255, 255, 0.95) 44%, rgba(247, 247, 247, 0.4) 50%, rgba(255, 255, 255, 0))',\r\n        transition: 'all 0.3s ease',\r\n    },\r\n}))\r\n\r\nconst Layout1 = () => {\r\n    const { settings, updateSettings } = useSettings()\r\n    const { layout1Settings, secondarySidebar } = settings\r\n    const {\r\n        leftSidebar: { mode: sidenavMode, show: showSidenav },\r\n    } = layout1Settings\r\n    const { routes } = useContext(AppContext)\r\n\r\n    const getSidenavWidth = () => {\r\n        switch (sidenavMode) {\r\n            case 'full':\r\n                return 'var(--sidenav-width)'\r\n            case 'compact':\r\n                return 'var(--sidenav-compact-width)'\r\n            default:\r\n                return '0px'\r\n        }\r\n    }\r\n\r\n    const sidenavWidth = getSidenavWidth()\r\n    let classes = useStyles({ width: sidenavWidth, secondarySidebar })\r\n    const theme = useTheme()\r\n    const isMdScreen = useMediaQuery(theme.breakpoints.down('md'))\r\n\r\n    const ref = useRef({ isMdScreen, settings })\r\n\r\n    const topbarTheme = settings.themes[layout1Settings.topbar.theme]\r\n    const layoutClasses = `theme-${theme.palette.type} flex`\r\n\r\n    useEffect(() => {\r\n        let { settings } = ref.current\r\n        let sidebarMode = settings.layout1Settings.leftSidebar.mode\r\n        if (settings.layout1Settings.leftSidebar.show) {\r\n            let mode = isMdScreen ? 'close' : sidebarMode\r\n            updateSettings({ layout1Settings: { leftSidebar: { mode } } })\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [isMdScreen])\r\n\r\n    return (\r\n        <div className={clsx('bg-default', layoutClasses)}>\r\n            {showSidenav && sidenavMode !== 'close' && (\r\n                <SidenavTheme>\r\n                    <Layout1Sidenav />\r\n                </SidenavTheme>\r\n            )}\r\n\r\n            <div\r\n                className={clsx(\r\n                    'flex-grow flex-column relative overflow-hidden h-full-screen',\r\n                    classes.contentWrap\r\n                )}\r\n            >\r\n                {layout1Settings.topbar.show && layout1Settings.topbar.fixed && (\r\n                    <ThemeProvider theme={topbarTheme}>\r\n                        <Layout1Topbar fixed={true} className=\"elevation-z8\" />\r\n                    </ThemeProvider>\r\n                )}\r\n\r\n                {settings.perfectScrollbar && (\r\n                    <Scrollbar className=\"flex-grow flex-column relative h-full\">\r\n                        {layout1Settings.topbar.show &&\r\n                            !layout1Settings.topbar.fixed && (\r\n                                <ThemeProvider theme={topbarTheme}>\r\n                                    <Layout1Topbar />\r\n                                </ThemeProvider>\r\n                            )}\r\n                        <div className=\"relative flex-grow\">\r\n                            <MatxSuspense>{renderRoutes(routes)}</MatxSuspense>\r\n                        </div>\r\n                        {settings.footer.show && !settings.footer.fixed && (\r\n                            <Footer />\r\n                        )}\r\n                    </Scrollbar>\r\n                )}\r\n\r\n                {!settings.perfectScrollbar && (\r\n                    <div className=\"flex-grow flex-column relative h-full scroll-y\">\r\n                        {layout1Settings.topbar.show &&\r\n                            !layout1Settings.topbar.fixed && (\r\n                                <ThemeProvider theme={topbarTheme}>\r\n                                    <Layout1Topbar />\r\n                                </ThemeProvider>\r\n                            )}\r\n                        <div className=\"relative flex-grow\">\r\n                            <MatxSuspense>{renderRoutes(routes)}</MatxSuspense>\r\n                        </div>\r\n                        {settings.footer.show && !settings.footer.fixed && (\r\n                            <Footer />\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {settings.footer.show && settings.footer.fixed && <Footer />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Layout1)\r\n"],"sourceRoot":""}